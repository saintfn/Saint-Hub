--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v106=v5(v81,v19);v19=nil;return v106;else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=0;local v83;while true do if (v82==(0 -0)) then v83=(v31/((5 -3)^(v32-((1 -0) -0))))%((2 + (0 -0))^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v83-(v83%(1271 -(226 + 1044))) ;end end else local v84=0 -0 ;local v85;while true do if (v84==(568 -(367 + (551 -(87 + 263))))) then v85=(2 + 0)^(v32-(928 -(214 + (893 -(67 + 113))))) ;return (((v31%(v85 + v85))>=v85) and (1 + 0 + 0)) or (0 + 0) ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==(1 + (0 -0))) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + (953 -(584 + 218 + 150)) ;v34=2 -1 ;end end end local function v22() local v36=997 -(915 + 82) ;local v37;local v38;while true do if (v36==(0 -0)) then v37,v38=v1(v16,v18,v18 + 1 + 1 );v18=v18 + 2 + (0 -0) ;v36=1 -0 ;end if (v36==(1188 -(1069 + 118))) then return (v38 * (1047 -(368 + 423))) + v37 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + (9 -6) );v18=v18 + (22 -(10 + 8)) ;return (v42 * (64537482 -47760266)) + (v41 * (65978 -(416 + 26))) + (v40 * 256) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=1 + 0 ;local v46=(v20(v44,1,9 + 11 ) * ((3 -1)^(470 -(145 + 293)))) + v43 ;local v47=v20(v44,(1506 -(87 + 968)) -(44 + 386) ,1517 -(998 + (2148 -1660)) );local v48=((v20(v44,11 + 21 )==((1292 + 132) -((1424 -794) + 793))) and  -((1414 -(447 + 966)) + 0)) or (773 -(201 + 571)) ;if (v47==(0 + 0)) then if (v46==(1138 -(116 + 1022))) then return v48 * (0 -0) ;else v47=1 + 0 ;v45=0 -0 ;end elseif (v47==(2813 -(745 + 21))) then return ((v46==(0 -0)) and (v48 * ((860 -(814 + 45))/((0 -0) -0)))) or (v48 * NaN) ;end return v8(v48,v47-(2520 -1497) ) * (v45 + (v46/(2^(41 + 11)))) ;end local function v25(v49) local v50=1817 -(1703 + 114) ;local v51;local v52;while true do if (v50==(704 -(376 + 325))) then return v6(v52);end if (v50==(1 -0)) then v51=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;v50=2;end if (v50==(5 -(1268 -(243 + 1022)))) then v52={};for v90=3 -2 , #v51 do v52[v90]=v2(v1(v3(v51,v90,v90)));end v50=1 + 2 ;end if (v50==(0 -0)) then v51=nil;if  not v49 then v49=v23();if (v49==(14 -(9 + 5))) then return "";end end v50=377 -(85 + 291) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53~=(0 -0)) then else v54={};v55={};v56={};v57={v54,v55,nil,v56};v53=1;end if (v53==(868 -(550 + 317))) then v58=v23();v59={};for v92=1,v58 do local v93=0 -0 ;local v94;local v95;local v96;while true do if (v93==0) then v94=0;v95=nil;v93=1 -0 ;end if (v93==(2 -1)) then v96=nil;while true do if ((286 -(134 + 151))==v94) then if (v95==(1666 -(970 + 695))) then v96=v21()~=(0 -0) ;elseif (v95==(1992 -(582 + 1408))) then v96=v24();elseif (v95~=3) then else v96=v25();end v59[v92]=v96;break;end if (v94==0) then local v112=0 -0 ;local v113;while true do if (0~=v112) then else v113=0 -0 ;while true do if (v113~=(0 -0)) then else v95=v21();v96=nil;v113=1;end if (v113~=1) then else v94=1;break;end end break;end end end end break;end end end v57[3]=v21();v53=1826 -(1195 + 629) ;end if (v53~=(2 -0)) then else for v97=1,v23() do local v98=241 -(187 + 54) ;local v99;while true do if (v98~=(780 -(162 + 618))) then else v99=v21();if (v20(v99,1 + 0 ,1)==(0 + 0)) then local v107=0 -0 ;local v108;local v109;local v110;while true do if (2==v107) then if (v20(v109,1,1 -0 )~=(1 + 0)) then else v110[2]=v59[v110[2]];end if (v20(v109,2,1638 -(1373 + 263) )==(1001 -(451 + 549))) then v110[1 + 2 ]=v59[v110[4 -1 ]];end v107=3;end if (v107==(1 -0)) then local v114=1384 -(746 + 638) ;local v115;while true do if (v114==0) then v115=0;while true do if (v115~=(1 + 0)) then else v107=2 -0 ;break;end if ((341 -(218 + 123))==v115) then v110={v22(),v22(),nil,nil};if (v108==(0 + 0)) then local v283=0;local v284;while true do if ((0 + 0)==v283) then v284=0;while true do if (v284==(560 -(306 + 254))) then v110[3]=v22();v110[1 + 3 ]=v22();break;end end break;end end elseif (v108==(1 -0)) then v110[1470 -(899 + 568) ]=v23();elseif (v108==(2 + 0)) then v110[3]=v23() -((4 -2)^16) ;elseif (v108==3) then local v289=0;local v290;while true do if (v289~=0) then else v290=603 -(268 + 335) ;while true do if (v290==(290 -(60 + 230))) then v110[575 -(426 + 146) ]=v23() -(2^(2 + 14)) ;v110[1460 -(282 + 1174) ]=v22();break;end end break;end end end v115=812 -(569 + 242) ;end end break;end end end if (v107==3) then if (v20(v109,8 -5 ,3)==(1 + 0)) then v110[1028 -(706 + 318) ]=v59[v110[1255 -(721 + 530) ]];end v54[v97]=v110;break;end if (v107==(1271 -(945 + 326))) then local v117=0 -0 ;local v118;while true do if (v117==(0 + 0)) then v118=700 -(271 + 429) ;while true do if (v118~=(1 + 0)) then else v107=1;break;end if (v118==0) then local v265=0;while true do if (v265==(1500 -(1408 + 92))) then v108=v20(v99,2,1089 -(461 + 625) );v109=v20(v99,4,6);v265=1289 -(993 + 295) ;end if (v265==1) then v118=1 + 0 ;break;end end end end break;end end end end end break;end end end for v100=1,v23() do v55[v100-(1172 -(418 + 753)) ]=v28();end return v57;end end end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v66=v63;local v67=v64;local v68=v65;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v86=0,v74 do if (v86>=v68) then v72[v86-v68 ]=v73[v86 + 1 ];else v76[v86]=v73[v86 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1];if (v79<=25) then if (v79<=12) then if (v79<=5) then if (v79<=2) then if (v79<=0) then v76[v78[2]]=v78[3];elseif (v79>1) then for v224=v78[2],v78[3] do v76[v224]=nil;end elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=3) then for v140=v78[2],v78[3] do v76[v140]=nil;end elseif (v79==4) then v76[v78[2]]=v29(v67[v78[3]],nil,v62);else v76[v78[2]]=v76[v78[3]];end elseif (v79<=8) then if (v79<=6) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==7) then v76[v78[2]]={};else do return;end end elseif (v79<=10) then if (v79>9) then v76[v78[2]]=v76[v78[3]];else v76[v78[2]]();end elseif (v79>11) then v70=v78[3];else v76[v78[2]]=v78[3]~=0 ;end elseif (v79<=18) then if (v79<=15) then if (v79<=13) then local v121=v78[2];v76[v121]=v76[v121]();elseif (v79==14) then v76[v78[2]][v78[3]]=v78[4];else local v159=v78[2];v76[v159]=v76[v159](v13(v76,v159 + 1 ,v78[3]));end elseif (v79<=16) then v76[v78[2]][v78[3]]=v76[v78[4]];elseif (v79==17) then v76[v78[2]]=v78[3]~=0 ;else local v162=0;local v163;local v164;local v165;local v166;while true do if (v162==0) then v163=v78[2];v164,v165=v69(v76[v163](v13(v76,v163 + 1 ,v78[3])));v162=1;end if (v162==1) then v71=(v165 + v163) -1 ;v166=0;v162=2;end if (v162==2) then for v266=v163,v71 do v166=v166 + 1 ;v76[v266]=v164[v166];end break;end end end elseif (v79<=21) then if (v79<=19) then local v125=v78[2];v76[v125]=v76[v125](v13(v76,v125 + 1 ,v71));elseif (v79>20) then local v167=0;local v168;local v169;local v170;while true do if (v167==0) then v168=v78[2];v169={v76[v168](v76[v168 + 1 ])};v167=1;end if (v167==1) then v170=0;for v269=v168,v78[4] do v170=v170 + 1 ;v76[v269]=v169[v170];end break;end end else local v171=0;local v172;while true do if (v171==0) then v172=v78[2];v76[v172]=v76[v172](v13(v76,v172 + 1 ,v78[3]));break;end end end elseif (v79<=23) then if (v79==22) then local v173=0;local v174;while true do if (v173==0) then v174=v78[2];v76[v174]=v76[v174]();break;end end else v70=v78[3];end elseif (v79>24) then local v176=0;local v177;local v178;while true do if (v176==1) then for v272=v177 + 1 ,v78[3] do v7(v178,v76[v272]);end break;end if (v176==0) then v177=v78[2];v178=v76[v177];v176=1;end end else local v179=v78[2];local v180={v76[v179](v76[v179 + 1 ])};local v181=0;for v226=v179,v78[4] do v181=v181 + 1 ;v76[v226]=v180[v181];end end elseif (v79<=38) then if (v79<=31) then if (v79<=28) then if (v79<=26) then local v127=0;local v128;while true do if (0==v127) then v128=v78[2];v76[v128](v13(v76,v128 + 1 ,v78[3]));break;end end elseif (v79>27) then v76[v78[2]]=v76[v78[3]][v78[4]];else v76[v78[2]][v78[3]]=v78[4];end elseif (v79<=29) then local v129=v78[2];v76[v129](v13(v76,v129 + 1 ,v78[3]));elseif (v79==30) then v76[v78[2]][v78[3]]=v76[v78[4]];else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=34) then if (v79<=32) then local v130=v78[2];local v131=v76[v78[3]];v76[v130 + 1 ]=v131;v76[v130]=v131[v78[4]];elseif (v79==33) then local v190=v78[2];local v191=v78[4];local v192=v190 + 2 ;local v193={v76[v190](v76[v190 + 1 ],v76[v192])};for v230=1,v191 do v76[v192 + v230 ]=v193[v230];end local v194=v193[1];if v194 then local v238=0;while true do if (v238==0) then v76[v192]=v194;v70=v78[3];break;end end else v70=v70 + 1 ;end else local v195=0;local v196;local v197;while true do if (v195==0) then v196=v78[2];v197=v76[v78[3]];v195=1;end if (v195==1) then v76[v196 + 1 ]=v197;v76[v196]=v197[v78[4]];break;end end end elseif (v79<=36) then if (v79>35) then local v198=v78[2];v76[v198]=v76[v198](v13(v76,v198 + 1 ,v71));else local v200=0;local v201;local v202;local v203;while true do if (v200==1) then v203=v78[3];for v273=1,v203 do v202[v273]=v76[v201 + v273 ];end break;end if (v200==0) then v201=v78[2];v202=v76[v201];v200=1;end end end elseif (v79>37) then local v204=v78[2];v76[v204](v76[v204 + 1 ]);else v76[v78[2]]=v62[v78[3]];end elseif (v79<=45) then if (v79<=41) then if (v79<=39) then local v135=0;local v136;local v137;local v138;local v139;while true do if (v135==2) then for v239=v136,v71 do local v240=0;while true do if (v240==0) then v139=v139 + 1 ;v76[v239]=v137[v139];break;end end end break;end if (v135==1) then v71=(v138 + v136) -1 ;v139=0;v135=2;end if (v135==0) then v136=v78[2];v137,v138=v69(v76[v136](v13(v76,v136 + 1 ,v78[3])));v135=1;end end elseif (v79==40) then local v207=v78[2];v76[v207](v76[v207 + 1 ]);elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=43) then if (v79==42) then v76[v78[2]]=v29(v67[v78[3]],nil,v62);else v76[v78[2]]=v78[3];end elseif (v79>44) then v76[v78[2]]={};else local v212=0;local v213;local v214;local v215;while true do if (v212==1) then v215=v78[3];for v276=1,v215 do v214[v276]=v76[v213 + v276 ];end break;end if (v212==0) then v213=v78[2];v214=v76[v213];v212=1;end end end elseif (v79<=48) then if (v79<=46) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==47) then do return;end elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=50) then if (v79>49) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v62[v78[3]];end elseif (v79==51) then local v219=v78[2];local v220=v78[4];local v221=v219 + 2 ;local v222={v76[v219](v76[v219 + 1 ],v76[v221])};for v234=1,v220 do v76[v221 + v234 ]=v222[v234];end local v223=v222[1];if v223 then v76[v221]=v223;v70=v78[3];else v70=v70 + 1 ;end else v76[v78[2]]();end v70=v70 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
