--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v91=0;while true do if (v91==0) then v19=v0(v3(v30,1,1));return "";end end else local v92=v2(v0(v30,16));if v19 then local v98=v5(v92,v19);v19=nil;return v98;else return v92;end end end);local function v20(v31,v32,v33) if v33 then local v93=0 -0 ;local v94;while true do if (v93==(0 -0)) then v94=(v31/((3 -1)^(v32-(2 -1))))%(2^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -(367 + 201)))) ;return v94-(v94%1) ;end end else local v95=(929 -(214 + (1590 -(282 + 595))))^(v32-(1 + 0)) ;return (((v31%(v95 + v95))>=v95) and (1 + 0)) or (1637 -(1523 + 114)) ;end end local function v21() local v34=0 + 0 ;local v35;while true do if (v34==0) then v35=v1(v16,v18,v18);v18=v18 + 1 ;v34=1 -0 ;end if (v34==((2336 -(226 + 1044)) -(68 + (4341 -3344)))) then return v35;end end end local function v22() local v36=117 -(32 + (208 -123)) ;local v37;local v38;while true do if (v36==(1 -0)) then return (v38 * (251 + 5)) + v37 ;end if (v36==(0 + 0)) then v37,v38=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (959 -(892 + (258 -193))) ;v36=1 + 0 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + ((1952 -(915 + 82)) -(802 + 150)) );v18=v18 + (10 -6) ;return (v42 * ((86174060 -55740808) -(7955270 + 5700766))) + (v41 * (47703 + 17833)) + (v40 * 256) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=1 -0 ;local v46=(v20(v44,1,1207 -(1069 + 118) ) * ((4 -2)^(69 -37))) + v43 ;local v47=v20(v44,(776 -(201 + 571)) + 17 ,31);local v48=((v20(v44,32)==((1139 -(116 + 1022)) -0)) and  -(1 + 0)) or (792 -(368 + (1760 -1337))) ;if (v47==(0 -(0 + 0))) then if (v46==(18 -(10 + 8))) then return v48 * ((0 -0) -(0 -0)) ;else local v99=0;while true do if (v99==(442 -(416 + 26))) then v47=3 -2 ;v45=0 + 0 ;break;end end end elseif (v47==(3621 -1574)) then return ((v46==(438 -(145 + 293))) and (v48 * ((431 -(44 + 386))/(1486 -(998 + 488))))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((1 + 1)^(43 + 9)))) ;end local function v25(v49) local v50=1423 -(630 + 793) ;local v51;local v52;while true do if (v50==(860 -(814 + 45))) then v51=v3(v16,v18,(v18 + v49) -(3 -2) );v18=v18 + v49 ;v50=(10 -6) -2 ;end if (v50==(2 + 1)) then return v6(v52);end if (v50==(6 -4)) then v52={};for v100=1 + 0 , #v51 do v52[v100]=v2(v1(v3(v51,v100,v100)));end v50=1750 -(760 + 987) ;end if (v50==(0 + 0)) then v51=nil;if  not v49 then local v107=885 -(261 + 624) ;while true do if (v107==(0 -0)) then v49=v23();if (v49==((4236 -3156) -(1020 + 60))) then return "";end break;end end end v50=1 + 0 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53={};local v54={};local v55={};local v56={v53,v54,nil,v55};local v57=v23();local v58={};for v66=1,v57 do local v67=0;local v68;local v69;local v70;while true do if (0==v67) then v68=0 + 0 ;v69=nil;v67=1;end if (v67==1) then v70=nil;while true do if (v68==(836 -(660 + 176))) then local v110=0 + 0 ;while true do if (v110==0) then v69=v21();v70=nil;v110=1;end if ((203 -(14 + 188))==v110) then v68=676 -(534 + 141) ;break;end end end if ((1 + 0)~=v68) then else if (v69==(1 + 0)) then v70=v21()~=0 ;elseif (v69==(2 + 0)) then v70=v24();elseif (v69==(6 -3)) then v70=v25();end v58[v66]=v70;break;end end break;end end end v56[3]=v21();for v71=1,v23() do local v72=0 -0 ;local v73;local v74;while true do if (v72==1) then while true do if (v73~=(0 -0)) then else v74=v21();if (v20(v74,1 + 0 ,1 + 0 )==0) then local v112=0;local v113;local v114;local v115;while true do if (v112==(399 -(115 + 281))) then if (v20(v114,6 -3 ,3 + 0 )==1) then v115[4]=v58[v115[9 -5 ]];end v53[v71]=v115;break;end if (v112~=1) then else local v117=0;local v118;while true do if (v117==(0 -0)) then v118=867 -(550 + 317) ;while true do if ((0 -0)==v118) then v115={v22(),v22(),nil,nil};if (v113==0) then local v252=0;local v253;while true do if ((1665 -(970 + 695))~=v252) then else v253=0 -0 ;while true do if (v253==0) then v115[1993 -(582 + 1408) ]=v22();v115[13 -9 ]=v22();break;end end break;end end elseif (v113==(1 -0)) then v115[3]=v23();elseif (v113==(7 -5)) then v115[3]=v23() -(2^(1840 -(1195 + 629))) ;elseif (v113==3) then local v275=0 -0 ;local v276;while true do if (v275==0) then v276=241 -(187 + 54) ;while true do if ((780 -(162 + 618))==v276) then v115[3]=v23() -((2 + 0)^16) ;v115[4]=v22();break;end end break;end end end v118=1 + 0 ;end if (v118==(1 -0)) then v112=2;break;end end break;end end end if (v112==(2 -0)) then if (v20(v114,1 + 0 ,1)==(1637 -(1373 + 263))) then v115[1002 -(451 + 549) ]=v58[v115[1 + 1 ]];end if (v20(v114,2 -0 ,2)==(1 -0)) then v115[1387 -(746 + 638) ]=v58[v115[2 + 1 ]];end v112=4 -1 ;end if (v112==0) then local v119=341 -(218 + 123) ;local v120;while true do if (v119==(1581 -(1535 + 46))) then v120=0;while true do if (v120~=(1 + 0)) then else v112=1;break;end if (v120==0) then v113=v20(v74,2,3);v114=v20(v74,1 + 3 ,566 -(306 + 254) );v120=1;end end break;end end end end end break;end end break;end if (v72~=0) then else local v102=0 + 0 ;while true do if (v102~=1) then else v72=1;break;end if (v102==(0 -0)) then v73=0;v74=nil;v102=1;end end end end end for v75=1,v23() do v54[v75-1 ]=v28();end return v56;end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v77=v63;local v78=v64;local v79=v65;local v80=v27;local v81=1;local v82= -1;local v83={};local v84={...};local v85=v12("#",...) -1 ;local v86={};local v87={};for v96=0,v85 do if (v96>=v79) then v83[v96-v79 ]=v84[v96 + 1 ];else v87[v96]=v84[v96 + 1 ];end end local v88=(v85-v79) + 1 ;local v89;local v90;while true do local v97=0;while true do if (1==v97) then if (v90<=25) then if (v90<=12) then if (v90<=5) then if (v90<=2) then if (v90<=0) then local v127=v89[2];v87[v127](v13(v87,v127 + 1 ,v89[3]));elseif (v90==1) then local v154=v89[2];local v155=v87[v89[3]];v87[v154 + 1 ]=v155;v87[v154]=v155[v89[4]];else do return;end end elseif (v90<=3) then local v128=v89[2];local v129=v87[v128];for v147=v128 + 1 ,v89[3] do v7(v129,v87[v147]);end elseif (v90>4) then for v230=v89[2],v89[3] do v87[v230]=nil;end else v81=v89[3];end elseif (v90<=8) then if (v90<=6) then v87[v89[2]]=v29(v78[v89[3]],nil,v62);elseif (v90>7) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end else local v160=0;local v161;while true do if (v160==0) then v161=v89[2];v87[v161]=v87[v161](v13(v87,v161 + 1 ,v82));break;end end end elseif (v90<=10) then if (v90>9) then v87[v89[2]]=v89[3];else v87[v89[2]]=v87[v89[3]][v89[4]];end elseif (v90>11) then if (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end else v87[v89[2]]=v89[3]~=0 ;end elseif (v90<=18) then if (v90<=15) then if (v90<=13) then do return;end elseif (v90>14) then if (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=16) then v87[v89[2]]();elseif (v90==17) then local v167=0;local v168;local v169;local v170;while true do if (v167==1) then v170=0;for v261=v168,v89[4] do local v262=0;while true do if (v262==0) then v170=v170 + 1 ;v87[v261]=v169[v170];break;end end end break;end if (v167==0) then v168=v89[2];v169={v87[v168](v87[v168 + 1 ])};v167=1;end end else local v171=v89[2];v87[v171]=v87[v171](v13(v87,v171 + 1 ,v89[3]));end elseif (v90<=21) then if (v90<=19) then local v131=v89[2];local v132=v87[v89[3]];v87[v131 + 1 ]=v132;v87[v131]=v132[v89[4]];elseif (v90==20) then v87[v89[2]]=v87[v89[3]];else local v175=0;local v176;while true do if (v175==0) then v176=v89[2];v87[v176](v87[v176 + 1 ]);break;end end end elseif (v90<=23) then if (v90==22) then local v177=v89[2];local v178=v89[4];local v179=v177 + 2 ;local v180={v87[v177](v87[v177 + 1 ],v87[v179])};for v232=1,v178 do v87[v179 + v232 ]=v180[v232];end local v181=v180[1];if v181 then v87[v179]=v181;v81=v89[3];else v81=v81 + 1 ;end else v87[v89[2]]();end elseif (v90==24) then for v235=v89[2],v89[3] do v87[v235]=nil;end elseif v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=38) then if (v90<=31) then if (v90<=28) then if (v90<=26) then if (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90==27) then v87[v89[2]]={};else v87[v89[2]][v89[3]]=v87[v89[4]];end elseif (v90<=29) then local v136=v89[2];v87[v136](v87[v136 + 1 ]);elseif (v90>30) then local v186=0;local v187;local v188;local v189;while true do if (v186==0) then v187=v89[2];v188={v87[v187](v87[v187 + 1 ])};v186=1;end if (v186==1) then v189=0;for v263=v187,v89[4] do local v264=0;while true do if (v264==0) then v189=v189 + 1 ;v87[v263]=v188[v189];break;end end end break;end end else v81=v89[3];end elseif (v90<=34) then if (v90<=32) then local v137=v89[2];local v138=v89[4];local v139=v137 + 2 ;local v140={v87[v137](v87[v137 + 1 ],v87[v139])};for v148=1,v138 do v87[v139 + v148 ]=v140[v148];end local v141=v140[1];if v141 then v87[v139]=v141;v81=v89[3];else v81=v81 + 1 ;end elseif (v90>33) then v87[v89[2]]=v87[v89[3]][v89[4]];else v87[v89[2]]=v89[3];end elseif (v90<=36) then if (v90==35) then v87[v89[2]]=v62[v89[3]];else v87[v89[2]]={};end elseif (v90>37) then local v200=v89[2];local v201,v202=v80(v87[v200](v13(v87,v200 + 1 ,v89[3])));v82=(v202 + v200) -1 ;local v203=0;for v237=v200,v82 do local v238=0;while true do if (v238==0) then v203=v203 + 1 ;v87[v237]=v201[v203];break;end end end else v87[v89[2]][v89[3]]=v89[4];end elseif (v90<=45) then if (v90<=41) then if (v90<=39) then local v142=v89[2];v87[v142]=v87[v142](v13(v87,v142 + 1 ,v89[3]));elseif (v90>40) then local v206=v89[2];v87[v206]=v87[v206]();else v87[v89[2]]=v89[3]~=0 ;end elseif (v90<=43) then if (v90>42) then local v209=v89[2];local v210,v211=v80(v87[v209](v13(v87,v209 + 1 ,v89[3])));v82=(v211 + v209) -1 ;local v212=0;for v239=v209,v82 do v212=v212 + 1 ;v87[v239]=v210[v212];end else v87[v89[2]]=v62[v89[3]];end elseif (v90==44) then local v215=0;local v216;while true do if (v215==0) then v216=v89[2];v87[v216]=v87[v216]();break;end end else local v217=v89[2];local v218=v87[v217];local v219=v89[3];for v242=1,v219 do v218[v242]=v87[v217 + v242 ];end end elseif (v90<=48) then if (v90<=46) then local v144=v89[2];local v145=v87[v144];local v146=v89[3];for v151=1,v146 do v145[v151]=v87[v144 + v151 ];end elseif (v90==47) then v87[v89[2]][v89[3]]=v89[4];else v87[v89[2]]=v29(v78[v89[3]],nil,v62);end elseif (v90<=50) then if (v90>49) then v87[v89[2]]=v87[v89[3]];else local v225=v89[2];v87[v225](v13(v87,v225 + 1 ,v89[3]));end elseif (v90>51) then v87[v89[2]][v89[3]]=v87[v89[4]];else local v228=v89[2];v87[v228]=v87[v228](v13(v87,v228 + 1 ,v82));end v81=v81 + 1 ;break;end if (v97==0) then v89=v77[v81];v90=v89[1];v97=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
