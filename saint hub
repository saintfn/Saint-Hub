--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v89=v5(v81,v19);v19=nil;return v89;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-((1 + 1) -1))))%(2^(((v33-1) -(v32-(1 -0))) + ((1 + 1) -1))) ;return v82-(v82%(620 -(555 + 64))) ;else local v83=2^(v32-(932 -(857 + 74))) ;return (((v31%(v83 + v83))>=v83) and (569 -(367 + 201))) or (927 -(214 + 713)) ;end end local function v21() local v34=877 -(282 + 595) ;local v35;while true do if (v34==((1045 + 21) -(68 + 997))) then return v35;end if (v34==(1270 -(51 + 175 + 1044))) then v35=v1(v16,v18,v18);v18=v18 + ((2595 -(892 + 65)) -(1523 + 114)) ;v34=1 + 0 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (4 -2) );v18=v18 + (3 -1) ;return (v37 * (469 -213)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (353 -(87 + 263)) );v18=v18 + (184 -(67 + 113)) ;return (v41 * (12302277 + 4474939)) + (v40 * ((118335 + 42566) -95365)) + (v39 * 256) + v38 ;end local function v24() local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(7 -5)) then v47=v20(v44,973 -(802 + 150) ,83 -(1538 -(998 + 488)) );v48=((v20(v44,57 -25 )==1) and  -1) or (1 + 0 + 0) ;v42=(819 + 181) -(915 + 82) ;end if (v42==((1140 -(116 + 1022)) -1)) then v45=1 + 0 ;v46=(v20(v44,1 -0 ,1207 -((4450 -3381) + 118) ) * ((4 -(774 -(201 + 571)))^(69 -37))) + v43 ;v42=1 + 1 ;end if (v42==3) then if (v47==(0 -0)) then if (v46==(0 + 0)) then return v48 * (791 -(368 + 423)) ;else v47=3 -2 ;v45=18 -(10 + 5 + 3) ;end elseif (v47==((28745 -20871) -5827)) then return ((v46==(442 -(416 + 26))) and (v48 * (1/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(440 + 583) ) * (v45 + (v46/((3 -1)^52))) ;end if (v42==((1555 -1117) -(145 + 293))) then v43=v23();v44=v23();v42=431 -(44 + 386) ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(859 -(814 + 45))) then return "";end end v50=v3(v16,v18,(v18 + v49) -(2 -1) );v18=v18 + v49 ;local v51={};for v65=1 + 0 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v52==(0 -0)) then local v86=0 -0 ;local v87;while true do if (v86==(0 -0)) then v87=0;while true do if (v87~=(0 + 0)) then else v53={};v54={};v87=1 + 0 ;end if (v87==2) then v52=397 -(115 + 281) ;break;end if (v87~=1) then else v55={};v56={v53,v54,nil,v55};v87=2;end end break;end end end if (v52~=(7 -5)) then else for v90=1,v23() do local v91=867 -(550 + 317) ;local v92;local v93;while true do if (v91==(1 -0)) then while true do if (v92==(0 -0)) then v93=v21();if (v20(v93,1,2 -1 )~=0) then else local v111=285 -(134 + 151) ;local v112;local v113;local v114;local v115;while true do if (v111~=(1666 -(970 + 695))) then else v114=nil;v115=nil;v111=2;end if (v111==0) then local v118=0 -0 ;while true do if (v118==(1991 -(582 + 1408))) then v111=1;break;end if (v118==(0 -0)) then v112=0 -0 ;v113=nil;v118=1;end end end if (v111==2) then while true do if (v112==2) then local v220=0 -0 ;local v221;while true do if (v220==0) then v221=1824 -(1195 + 629) ;while true do if (1==v221) then v112=3 -0 ;break;end if (v221~=0) then else if (v20(v114,1,1)==(242 -(187 + 54))) then v115[782 -(162 + 618) ]=v58[v115[2]];end if (v20(v114,2,2)~=1) then else v115[3]=v58[v115[3 + 0 ]];end v221=1 + 0 ;end end break;end end end if ((1 -0)==v112) then local v222=0;local v223;while true do if (v222~=0) then else v223=0;while true do if (v223==0) then v115={v22(),v22(),nil,nil};if (v113==(1000 -(451 + 549))) then local v274=0;local v275;while true do if ((0 + 0)==v274) then v275=0;while true do if (v275~=0) then else v115[3]=v22();v115[5 -1 ]=v22();break;end end break;end end elseif (v113==1) then v115[4 -1 ]=v23();elseif (v113==(1386 -(746 + 638))) then v115[2 + 1 ]=v23() -(2^16) ;elseif (v113==3) then local v280=0 -0 ;local v281;while true do if (v280~=(341 -(218 + 123))) then else v281=0;while true do if (v281==(1581 -(1535 + 46))) then v115[3]=v23() -(2^(16 + 0)) ;v115[4]=v22();break;end end break;end end end v223=1;end if (v223~=(1 + 0)) then else v112=562 -(306 + 254) ;break;end end break;end end end if ((0 + 0)==v112) then local v224=0;local v225;while true do if (v224==(0 -0)) then v225=1467 -(899 + 568) ;while true do if (v225~=(1 + 0)) then else v112=1;break;end if (v225==0) then v113=v20(v93,4 -2 ,606 -(268 + 335) );v114=v20(v93,294 -(60 + 230) ,578 -(426 + 146) );v225=1;end end break;end end end if (v112==3) then if (v20(v114,3,3)~=(1 + 0)) then else v115[4]=v58[v115[1460 -(282 + 1174) ]];end v53[v90]=v115;break;end end break;end end end break;end end break;end if (v91==(811 -(569 + 242))) then local v103=0;while true do if (v103~=1) then else v91=2 -1 ;break;end if (v103==0) then v92=0 + 0 ;v93=nil;v103=1;end end end end end for v94=1,v23() do v54[v94-1 ]=v28();end return v56;end if (v52==(1025 -(706 + 318))) then local v88=0;while true do if (v88==(1252 -(721 + 530))) then for v104=1272 -(945 + 326) ,v57 do local v105=0;local v106;local v107;local v108;while true do if (v105==0) then local v109=0;local v110;while true do if (v109~=(0 -0)) then else v110=0;while true do if (v110==1) then v105=1;break;end if (v110==(0 + 0)) then v106=700 -(271 + 429) ;v107=nil;v110=1 + 0 ;end end break;end end end if (v105==(1501 -(1408 + 92))) then v108=nil;while true do if (v106==0) then local v116=1086 -(461 + 625) ;while true do if (1~=v116) then else v106=1;break;end if (0==v116) then v107=v21();v108=nil;v116=1;end end end if (1==v106) then if (v107==1) then v108=v21()~=0 ;elseif (v107==(1290 -(993 + 295))) then v108=v24();elseif (v107==(1 + 2)) then v108=v25();end v58[v104]=v108;break;end end break;end end end v56[1174 -(418 + 753) ]=v21();v88=2;end if (v88~=0) then else v57=v23();v58={};v88=1;end if (v88==(1 + 1)) then v52=2;break;end end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v67=v62;local v68=v63;local v69=v64;local v70=v27;local v71=1;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v84=0,v75 do if (v84>=v69) then v73[v84-v69 ]=v74[v84 + 1 ];else v77[v84]=v74[v84 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;local v80;while true do local v85=0;while true do if (v85==1) then if (v80<=25) then if (v80<=12) then if (v80<=5) then if (v80<=2) then if (v80<=0) then local v119=0;local v120;while true do if (v119==0) then v120=v79[2];v77[v120]=v77[v120](v13(v77,v120 + 1 ,v72));break;end end elseif (v80==1) then local v142=0;local v143;while true do if (v142==0) then v143=v79[2];v77[v143](v77[v143 + 1 ]);break;end end else local v144=v79[2];v77[v144]=v77[v144]();end elseif (v80<=3) then local v121=v79[2];v77[v121]=v77[v121]();elseif (v80==4) then local v146=v79[2];local v147={v77[v146](v77[v146 + 1 ])};local v148=0;for v229=v146,v79[4] do v148=v148 + 1 ;v77[v229]=v147[v148];end else v77[v79[2]]=v61[v79[3]];end elseif (v80<=8) then if (v80<=6) then v77[v79[2]]=v77[v79[3]][v79[4]];elseif (v80>7) then v77[v79[2]]();else v77[v79[2]][v79[3]]=v79[4];end elseif (v80<=10) then if (v80>9) then v77[v79[2]][v79[3]]=v77[v79[4]];else v77[v79[2]][v79[3]]=v77[v79[4]];end elseif (v80>11) then v77[v79[2]]=v77[v79[3]];else v77[v79[2]][v79[3]]=v79[4];end elseif (v80<=18) then if (v80<=15) then if (v80<=13) then do return;end elseif (v80==14) then local v161=v79[2];local v162=v79[4];local v163=v161 + 2 ;local v164={v77[v161](v77[v161 + 1 ],v77[v163])};for v232=1,v162 do v77[v163 + v232 ]=v164[v232];end local v165=v164[1];if v165 then v77[v163]=v165;v71=v79[3];else v71=v71 + 1 ;end else local v166=v79[2];v77[v166](v77[v166 + 1 ]);end elseif (v80<=16) then if v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80>17) then for v235=v79[2],v79[3] do v77[v235]=nil;end else v77[v79[2]]=v77[v79[3]][v79[4]];end elseif (v80<=21) then if (v80<=19) then local v125=0;local v126;local v127;local v128;local v129;while true do if (v125==1) then v72=(v128 + v126) -1 ;v129=0;v125=2;end if (v125==0) then v126=v79[2];v127,v128=v70(v77[v126](v13(v77,v126 + 1 ,v79[3])));v125=1;end if (2==v125) then for v251=v126,v72 do v129=v129 + 1 ;v77[v251]=v127[v129];end break;end end elseif (v80>20) then v71=v79[3];else v71=v79[3];end elseif (v80<=23) then if (v80==22) then v77[v79[2]]=v79[3]~=0 ;else local v173=v79[2];local v174,v175=v70(v77[v173](v13(v77,v173 + 1 ,v79[3])));v72=(v175 + v173) -1 ;local v176=0;for v238=v173,v72 do v176=v176 + 1 ;v77[v238]=v174[v176];end end elseif (v80==24) then do return;end elseif v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=38) then if (v80<=31) then if (v80<=28) then if (v80<=26) then local v130=v79[2];local v131=v77[v130];for v138=v130 + 1 ,v79[3] do v7(v131,v77[v138]);end elseif (v80==27) then v77[v79[2]]=v79[3]~=0 ;else v77[v79[2]]=v79[3];end elseif (v80<=29) then if (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80>30) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end else v77[v79[2]]=v29(v68[v79[3]],nil,v61);end elseif (v80<=34) then if (v80<=32) then local v132=v79[2];local v133=v79[4];local v134=v132 + 2 ;local v135={v77[v132](v77[v132 + 1 ],v77[v134])};for v139=1,v133 do v77[v134 + v139 ]=v135[v139];end local v136=v135[1];if v136 then local v182=0;while true do if (v182==0) then v77[v134]=v136;v71=v79[3];break;end end else v71=v71 + 1 ;end elseif (v80>33) then local v183=v79[2];v77[v183]=v77[v183](v13(v77,v183 + 1 ,v79[3]));else v77[v79[2]]=v77[v79[3]];end elseif (v80<=36) then if (v80==35) then local v187=v79[2];local v188=v77[v187];local v189=v79[3];for v241=1,v189 do v188[v241]=v77[v187 + v241 ];end elseif (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80==37) then local v190=0;local v191;while true do if (v190==0) then v191=v79[2];v77[v191]=v77[v191](v13(v77,v191 + 1 ,v79[3]));break;end end else local v192=v79[2];local v193=v77[v79[3]];v77[v192 + 1 ]=v193;v77[v192]=v193[v79[4]];end elseif (v80<=45) then if (v80<=41) then if (v80<=39) then if (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80==40) then local v198=v79[2];v77[v198](v13(v77,v198 + 1 ,v79[3]));else local v199=v79[2];local v200={v77[v199](v77[v199 + 1 ])};local v201=0;for v244=v199,v79[4] do v201=v201 + 1 ;v77[v244]=v200[v201];end end elseif (v80<=43) then if (v80>42) then local v202=0;local v203;local v204;local v205;while true do if (v202==0) then v203=v79[2];v204=v77[v203];v202=1;end if (v202==1) then v205=v79[3];for v267=1,v205 do v204[v267]=v77[v203 + v267 ];end break;end end else local v206=v79[2];v77[v206]=v77[v206](v13(v77,v206 + 1 ,v72));end elseif (v80==44) then v77[v79[2]]=v61[v79[3]];else v77[v79[2]]={};end elseif (v80<=48) then if (v80<=46) then v77[v79[2]]={};elseif (v80==47) then local v211=v79[2];v77[v211](v13(v77,v211 + 1 ,v79[3]));else v77[v79[2]]=v79[3];end elseif (v80<=50) then if (v80==49) then v77[v79[2]]();else v77[v79[2]]=v29(v68[v79[3]],nil,v61);end elseif (v80==51) then local v215=v79[2];local v216=v77[v79[3]];v77[v215 + 1 ]=v216;v77[v215]=v216[v79[4]];else for v247=v79[2],v79[3] do v77[v247]=nil;end end v71=v71 + 1 ;break;end if (v85==0) then v79=v67[v71];v80=v79[1];v85=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
