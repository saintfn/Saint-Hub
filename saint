--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v97=v5(v84,v19);v19=nil;return v97;else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=(v31/((5 -3)^(v32-(2 -1))))%(((120 -(32 + 85)) -(1 + 0))^(((v33-(2 -1)) -(v32-(1638 -(1523 + 114)))) + (620 -(555 + 64)))) ;return v85-(v85%(1 -0)) ;else local v86=2^(v32-(932 -(857 + 74))) ;return (((v31%(v86 + v86))>=v86) and (569 -(367 + 201))) or (0 -0) ;end end local function v21() local v34=(0 -0) + 0 ;local v35;while true do if (v34==(958 -(892 + 65))) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + (1 -(350 -(87 + 263))) ;v34=1;end end end local function v22() local v36=180 -(67 + 113) ;local v37;local v38;while true do if (v36==(1 + (952 -(802 + 150)))) then return (v38 * 256) + v37 ;end if (v36==(0 -0)) then v37,v38=v1(v16,v18,v18 + 2 + (0 -0) );v18=v18 + 2 ;v36=3 -2 ;end end end local function v23() local v39=0 -0 ;local v40;local v41;local v42;local v43;while true do if (v39==(1 + 0)) then return (v43 * 16777216) + (v42 * (66533 -(915 + (185 -103)))) + (v41 * 256) + v40 ;end if (v39==(0 -0)) then v40,v41,v42,v43=v1(v16,v18,v18 + 2 + 1 );v18=v18 + (4 -0) ;v39=(2598 -1410) -(1069 + 118) ;end end end local function v24() local v44=v23();local v45=v23();local v46=1 + 0 ;local v47=(v20(v45,1 -0 ,20 + 0 ) * ((793 -(368 + (2336 -(1789 + 124))))^((1936 -(745 + 21)) -(40 + 76 + 1022)))) + v44 ;local v48=v20(v45,65 -44 ,49 -(10 + (21 -13)) );local v49=((v20(v45,(478 -356) -90 )==(3 -2)) and  -(860 -(814 + 1 + 44))) or (443 -(416 + 26)) ;if (v48==(0 -0)) then if (v47==(0 + 0)) then return v49 * (885 -(261 + 624)) ;else v48=1 -(0 + 0) ;v46=0;end elseif (v48==(879 + 1168)) then return ((v47==(0 -0)) and (v49 * ((439 -(145 + (1348 -(87 + 968))))/(430 -(44 + 386))))) or (v49 * NaN) ;end return v8(v49,v48-(403 + 620) ) * (v46 + (v47/((6 -4)^(1538 -(998 + 488))))) ;end local function v25(v50) local v51;if  not v50 then local v87=0 -0 ;while true do if (v87==(0 + 0)) then v50=v23();if (v50==(0 -(1817 -(1703 + 114)))) then return "";end break;end end end v51=v3(v16,v18,(v18 + v50) -(1414 -(447 + (1667 -(376 + 325)))) );v18=v18 + v50 ;local v52={};for v66=2 -1 , #v51 do v52[v66]=v2(v1(v3(v51,v66,v66)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=1941 -(550 + 1391) ;local v54;local v55;local v56;local v57;local v58;local v59;while true do local v68=0 -0 ;while true do if (v68~=0) then else if (0~=v53) then else v54={};v55={};v56={};v57={v54,v55,nil,v56};v53=1785 -(599 + 1185) ;end if (v53~=2) then else for v98=1 + 0 ,v23() do local v99=0 + 0 ;local v100;local v101;while true do if (v99~=(575 -(507 + 67))) then else while true do if (v100~=0) then else v101=v21();if (v20(v101,1750 -(1013 + 736) ,1)~=0) then else local v112=0;local v113;local v114;local v115;while true do if (0==v112) then v113=v20(v101,2 + 0 ,7 -4 );v114=v20(v101,14 -10 ,873 -(550 + 317) );v112=1 -0 ;end if (v112==(2 -0)) then if (v20(v114,2 -1 ,286 -(134 + 151) )~=1) then else v115[1667 -(970 + 695) ]=v59[v115[3 -1 ]];end if (v20(v114,1992 -(582 + 1408) ,2)~=1) then else v115[10 -7 ]=v59[v115[3 -0 ]];end v112=11 -8 ;end if (v112==(1827 -(1195 + 629))) then if (v20(v114,3 -0 ,3)==1) then v115[245 -(187 + 54) ]=v59[v115[4]];end v54[v98]=v115;break;end if (v112==(781 -(162 + 618))) then local v215=0 + 0 ;local v216;while true do if (v215==(0 + 0)) then v216=0 -0 ;while true do if (v216==1) then v112=2 -0 ;break;end if (v216==0) then v115={v22(),v22(),nil,nil};if (v113==(1000 -(451 + 549))) then local v268=0 + 0 ;local v269;while true do if (0==v268) then v269=0 -0 ;while true do if (v269==0) then v115[3]=v22();v115[4]=v22();break;end end break;end end elseif (v113==1) then v115[3]=v23();elseif (v113==(2 -0)) then v115[1387 -(746 + 638) ]=v23() -((1 + 1)^(23 -7)) ;elseif (v113==3) then local v274=0;local v275;while true do if (v274~=0) then else v275=0;while true do if (v275==0) then v115[344 -(218 + 123) ]=v23() -((1583 -(1535 + 46))^(16 + 0)) ;v115[4]=v22();break;end end break;end end end v216=1 + 0 ;end end break;end end end end end break;end end break;end if (v99~=(560 -(306 + 254))) then else v100=0 + 0 ;v101=nil;v99=1;end end end for v102=1 -0 ,v23() do v55[v102-1 ]=v28();end return v57;end v68=1468 -(899 + 568) ;end if ((1 + 0)==v68) then if (v53~=(2 -1)) then else v58=v23();v59={};for v104=1,v58 do local v105=0;local v106;local v107;local v108;while true do if (v105~=0) then else v106=0;v107=nil;v105=1;end if (1==v105) then v108=nil;while true do if (v106==(604 -(268 + 335))) then if (v107==(291 -(60 + 230))) then v108=v21()~=(572 -(426 + 146)) ;elseif (v107==(1 + 1)) then v108=v24();elseif (v107==(1459 -(282 + 1174))) then v108=v25();end v59[v104]=v108;break;end if ((811 -(569 + 242))==v106) then local v110=0 -0 ;local v111;while true do if (v110==(0 + 0)) then v111=1024 -(706 + 318) ;while true do if (v111~=(1252 -(721 + 530))) then else v106=1272 -(945 + 326) ;break;end if (v111==0) then v107=v21();v108=nil;v111=1;end end break;end end end end break;end end end v57[7 -4 ]=v21();v53=2 + 0 ;end break;end end end end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v69=v63;local v70=v64;local v71=v65;local v72=v27;local v73=1;local v74= -1;local v75={};local v76={...};local v77=v12("#",...) -1 ;local v78={};local v79={};for v88=0,v77 do if (v88>=v71) then v75[v88-v71 ]=v76[v88 + 1 ];else v79[v88]=v76[v88 + 1 ];end end local v80=(v77-v71) + 1 ;local v81;local v82;while true do local v89=0;while true do if (v89==1) then if (v82<=25) then if (v82<=12) then if (v82<=5) then if (v82<=2) then if (v82<=0) then v73=v81[3];elseif (v82==1) then v79[v81[2]]=v81[3];else local v142=v81[2];local v143=v79[v142];local v144=v81[3];for v217=1,v144 do v143[v217]=v79[v142 + v217 ];end end elseif (v82<=3) then v79[v81[2]]=v81[3];elseif (v82>4) then if v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end else local v145=v81[2];local v146=v79[v81[3]];v79[v145 + 1 ]=v146;v79[v145]=v146[v81[4]];end elseif (v82<=8) then if (v82<=6) then do return;end elseif (v82==7) then local v150=v81[2];local v151,v152=v72(v79[v150](v13(v79,v150 + 1 ,v81[3])));v74=(v152 + v150) -1 ;local v153=0;for v220=v150,v74 do v153=v153 + 1 ;v79[v220]=v151[v153];end elseif (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=10) then if (v82==9) then v79[v81[2]]();else local v154=v81[2];v79[v154](v79[v154 + 1 ]);end elseif (v82==11) then local v155=0;local v156;local v157;local v158;local v159;while true do if (v155==2) then for v262=v156,v74 do v159=v159 + 1 ;v79[v262]=v157[v159];end break;end if (1==v155) then v74=(v158 + v156) -1 ;v159=0;v155=2;end if (v155==0) then v156=v81[2];v157,v158=v72(v79[v156](v13(v79,v156 + 1 ,v81[3])));v155=1;end end else v79[v81[2]]=v62[v81[3]];end elseif (v82<=18) then if (v82<=15) then if (v82<=13) then v79[v81[2]]=v29(v70[v81[3]],nil,v62);elseif (v82==14) then for v223=v81[2],v81[3] do v79[v223]=nil;end else local v162=v81[2];local v163={v79[v162](v79[v162 + 1 ])};local v164=0;for v225=v162,v81[4] do v164=v164 + 1 ;v79[v225]=v163[v164];end end elseif (v82<=16) then v79[v81[2]]=v79[v81[3]];elseif (v82==17) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end else local v165=0;local v166;while true do if (v165==0) then v166=v81[2];v79[v166]=v79[v166]();break;end end end elseif (v82<=21) then if (v82<=19) then local v122=v81[2];v79[v122]=v79[v122](v13(v79,v122 + 1 ,v74));elseif (v82>20) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end else v79[v81[2]]=v79[v81[3]];end elseif (v82<=23) then if (v82==22) then local v169=v81[2];local v170=v79[v81[3]];v79[v169 + 1 ]=v170;v79[v169]=v170[v81[4]];else v79[v81[2]][v81[3]]=v81[4];end elseif (v82==24) then v79[v81[2]]={};elseif (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=38) then if (v82<=31) then if (v82<=28) then if (v82<=26) then local v124=0;local v125;local v126;local v127;while true do if (v124==0) then v125=v81[2];v126={v79[v125](v79[v125 + 1 ])};v124=1;end if (v124==1) then v127=0;for v242=v125,v81[4] do local v243=0;while true do if (v243==0) then v127=v127 + 1 ;v79[v242]=v126[v127];break;end end end break;end end elseif (v82>27) then local v177=v81[2];v79[v177](v13(v79,v177 + 1 ,v81[3]));else v73=v81[3];end elseif (v82<=29) then local v128=v81[2];v79[v128](v13(v79,v128 + 1 ,v81[3]));elseif (v82==30) then if v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end else v79[v81[2]]();end elseif (v82<=34) then if (v82<=32) then v79[v81[2]]=v79[v81[3]][v81[4]];elseif (v82>33) then local v179=v81[2];local v180=v79[v179];local v181=v81[3];for v229=1,v181 do v180[v229]=v79[v179 + v229 ];end else for v232=v81[2],v81[3] do v79[v232]=nil;end end elseif (v82<=36) then if (v82>35) then local v182=v81[2];v79[v182]=v79[v182]();else v79[v81[2]]={};end elseif (v82==37) then v79[v81[2]][v81[3]]=v81[4];else local v187=v81[2];v79[v187](v79[v187 + 1 ]);end elseif (v82<=45) then if (v82<=41) then if (v82<=39) then v79[v81[2]]=v81[3]~=0 ;elseif (v82>40) then v79[v81[2]][v81[3]]=v79[v81[4]];else v79[v81[2]][v81[3]]=v79[v81[4]];end elseif (v82<=43) then if (v82==42) then do return;end else v79[v81[2]]=v81[3]~=0 ;end elseif (v82==44) then v79[v81[2]]=v62[v81[3]];else local v195=v81[2];local v196=v81[4];local v197=v195 + 2 ;local v198={v79[v195](v79[v195 + 1 ],v79[v197])};for v234=1,v196 do v79[v197 + v234 ]=v198[v234];end local v199=v198[1];if v199 then v79[v197]=v199;v73=v81[3];else v73=v73 + 1 ;end end elseif (v82<=48) then if (v82<=46) then local v132=v81[2];local v133=v81[4];local v134=v132 + 2 ;local v135={v79[v132](v79[v132 + 1 ],v79[v134])};for v137=1,v133 do v79[v134 + v137 ]=v135[v137];end local v136=v135[1];if v136 then v79[v134]=v136;v73=v81[3];else v73=v73 + 1 ;end elseif (v82==47) then local v202=0;local v203;local v204;while true do if (v202==1) then for v265=v203 + 1 ,v81[3] do v7(v204,v79[v265]);end break;end if (v202==0) then v203=v81[2];v204=v79[v203];v202=1;end end else v79[v81[2]]=v29(v70[v81[3]],nil,v62);end elseif (v82<=50) then if (v82>49) then local v206=v81[2];v79[v206]=v79[v206](v13(v79,v206 + 1 ,v74));else local v208=0;local v209;while true do if (v208==0) then v209=v81[2];v79[v209]=v79[v209](v13(v79,v209 + 1 ,v81[3]));break;end end end elseif (v82>51) then v79[v81[2]]=v79[v81[3]][v81[4]];else local v212=0;local v213;while true do if (v212==0) then v213=v81[2];v79[v213]=v79[v213](v13(v79,v213 + 1 ,v81[3]));break;end end end v73=v73 + 1 ;break;end if (0==v89) then v81=v69[v73];v82=v81[1];v89=1;end end end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
