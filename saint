--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=v2(v0(v30,16));if v19 then local v86=0;local v87;while true do if (v86==1) then return v87;end if (v86==0) then v87=v5(v80,v19);v19=nil;v86=1;end end else return v80;end end end);local function v20(v31,v32,v33) if v33 then local v81=(v31/((5 -3)^(v32-(2 -(1 + 0)))))%(2^(((v33-(1 + 0)) -(v32-(1 -0))) + (2 -(878 -(282 + 595))))) ;return v81-(v81%(620 -(555 + 64))) ;else local v82=(933 -(857 + 74))^(v32-(569 -(367 + (1838 -(1523 + 114))))) ;return (((v31%(v82 + v82))>=v82) and 1) or (927 -(214 + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1273 -(51 + 175 + 1044)) );v18=v18 + (17 -13) ;return (v40 * 16777216) + (v39 * (65653 -(32 + 85))) + (v38 * (251 + 5)) + v37 ;end local function v24() local v41=957 -(892 + 65) ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==2) then v46=v20(v43,49 -(46 -(10 + 8)) ,56 -25 );v47=((v20(v43,32)==(1 -0)) and  -((1350 -999) -(87 + 263))) or 1 ;v41=3;end if (v41==((623 -(416 + 26)) -(67 + 113))) then v44=1 + 0 ;v45=(v20(v43,2 -1 ,15 + 5 ) * ((7 -5)^(984 -(802 + 150)))) + v42 ;v41=5 -3 ;end if (v41==(5 -2)) then if (v46==(0 + 0)) then if (v45==(997 -(915 + 82))) then return v47 * 0 ;else local v104=0;while true do if (v104==((0 -0) -0)) then v46=1 + 0 + 0 ;v44=(0 -0) -0 ;break;end end end elseif (v46==(3234 -(1069 + 118))) then return ((v45==(0 -0)) and (v47 * ((1 -0)/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/((3 -1)^(52 + 0)))) ;end if (v41==(791 -(368 + 423))) then v42=v23();v43=v23();v41=3 -2 ;end end end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(438 -(47 + 98 + 293))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(431 -(44 + 386)) );v18=v18 + v48 ;local v50={};for v64=1487 -(998 + 488) , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;while true do if (v51==(0 + 0)) then v52={};v53={};v54={};v55={v52,v53,nil,v54};v51=1;end if (v51~=(1 + 1)) then else for v88=1,v23() do local v89=0 -0 ;local v90;while true do if (v89~=0) then else v90=v21();if (v20(v90,15 -(9 + 5) ,1)==(376 -(85 + 291))) then local v105=1265 -(243 + 1022) ;local v106;local v107;local v108;while true do if (v105==3) then if (v20(v107,11 -8 ,3)~=1) then else v108[4 + 0 ]=v57[v108[3 + 1 ]];end v52[v88]=v108;break;end if (v105~=(0 + 0)) then else local v112=396 -(115 + 281) ;while true do if (v112==(1181 -(1123 + 57))) then v105=1;break;end if (v112==(0 -0)) then v106=v20(v90,2 + 0 ,257 -(163 + 91) );v107=v20(v90,9 -5 ,1936 -(1869 + 61) );v112=1 + 0 ;end end end if (v105~=(3 -2)) then else local v113=0 -0 ;while true do if (v113~=(1 + 0)) then else v105=2;break;end if (v113~=(0 -0)) then else v108={v22(),v22(),nil,nil};if (v106==(0 + 0)) then local v149=1474 -(1329 + 145) ;local v150;while true do if (v149~=0) then else v150=0;while true do if (v150~=(1990 -(582 + 1408))) then else v108[10 -7 ]=v22();v108[975 -(140 + 831) ]=v22();break;end end break;end end elseif (v106==1) then v108[1853 -(1409 + 441) ]=v23();elseif (v106==2) then v108[3]=v23() -((720 -(15 + 703))^(8 + 8)) ;elseif (v106==(3 -0)) then local v276=0;local v277;while true do if (v276==(241 -(187 + 54))) then v277=780 -(162 + 618) ;while true do if (v277==0) then v108[441 -(262 + 176) ]=v23() -((1723 -(345 + 1376))^(704 -(198 + 490))) ;v108[17 -13 ]=v22();break;end end break;end end end v113=1;end end end if (v105~=(4 -2)) then else if (v20(v107,1207 -(696 + 510) ,1 + 0 )==1) then v108[2]=v57[v108[3 -1 ]];end if (v20(v107,1264 -(1091 + 171) ,2)==(1 + 0)) then v108[3]=v57[v108[3]];end v105=9 -6 ;end end end break;end end end for v91=1 -0 ,v23() do v53[v91-1 ]=v28();end return v55;end if (v51==(1 -0)) then v56=v23();v57={};for v93=1385 -(746 + 638) ,v56 do local v94=0 -0 ;local v95;local v96;local v97;while true do if (v94~=(1 -0)) then else v97=nil;while true do if ((374 -(123 + 251))==v95) then local v109=0 -0 ;while true do if ((699 -(208 + 490))==v109) then v95=1 + 0 ;break;end if (v109==(0 + 0)) then v96=v21();v97=nil;v109=1 + 0 ;end end end if (v95==(837 -(660 + 176))) then if (v96==(1 + 0)) then v97=v21()~=(0 + 0) ;elseif (v96==(204 -(14 + 188))) then v97=v24();elseif (v96==(563 -(306 + 254))) then v97=v25();end v57[v93]=v97;break;end end break;end if (v94==(675 -(534 + 141))) then v95=0 -0 ;v96=nil;v94=1 + 0 ;end end end v55[3]=v21();v51=2 + 0 ;end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v83=0,v74 do if (v83>=v68) then v72[v83-v68 ]=v73[v83 + 1 ];else v76[v83]=v73[v83 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do local v84=0;while true do if (v84==0) then v78=v66[v70];v79=v78[1];v84=1;end if (v84==1) then if (v79<=25) then if (v79<=12) then if (v79<=5) then if (v79<=2) then if (v79<=0) then v76[v78[2]]=v60[v78[3]];elseif (v79==1) then local v151=v78[2];local v152={v76[v151](v76[v151 + 1 ])};local v153=0;for v224=v151,v78[4] do local v225=0;while true do if (v225==0) then v153=v153 + 1 ;v76[v224]=v152[v153];break;end end end else v76[v78[2]]();end elseif (v79<=3) then for v141=v78[2],v78[3] do v76[v141]=nil;end elseif (v79==4) then v76[v78[2]]();else local v154=v78[2];v76[v154]=v76[v154]();end elseif (v79<=8) then if (v79<=6) then v76[v78[2]]=v78[3]~=0 ;elseif (v79==7) then local v156=v78[2];local v157=v78[4];local v158=v156 + 2 ;local v159={v76[v156](v76[v156 + 1 ],v76[v158])};for v226=1,v157 do v76[v158 + v226 ]=v159[v226];end local v160=v159[1];if v160 then v76[v158]=v160;v70=v78[3];else v70=v70 + 1 ;end else do return;end end elseif (v79<=10) then if (v79==9) then v76[v78[2]][v78[3]]=v76[v78[4]];else local v163=v78[2];local v164=v76[v78[3]];v76[v163 + 1 ]=v164;v76[v163]=v164[v78[4]];end elseif (v79==11) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]={};end elseif (v79<=18) then if (v79<=15) then if (v79<=13) then v76[v78[2]]={};elseif (v79>14) then v76[v78[2]]=v29(v67[v78[3]],nil,v60);else local v170=v78[2];local v171={v76[v170](v76[v170 + 1 ])};local v172=0;for v229=v170,v78[4] do v172=v172 + 1 ;v76[v229]=v171[v172];end end elseif (v79<=16) then do return;end elseif (v79==17) then local v173=0;local v174;local v175;while true do if (v173==0) then v174=v78[2];v175=v76[v78[3]];v173=1;end if (v173==1) then v76[v174 + 1 ]=v175;v76[v174]=v175[v78[4]];break;end end else local v176=0;local v177;while true do if (v176==0) then v177=v78[2];v76[v177]=v76[v177](v13(v76,v177 + 1 ,v78[3]));break;end end end elseif (v79<=21) then if (v79<=19) then local v124=0;local v125;while true do if (v124==0) then v125=v78[2];v76[v125]=v76[v125](v13(v76,v125 + 1 ,v71));break;end end elseif (v79==20) then local v178=0;local v179;while true do if (v178==0) then v179=v78[2];v76[v179](v13(v76,v179 + 1 ,v78[3]));break;end end else v76[v78[2]]=v78[3]~=0 ;end elseif (v79<=23) then if (v79>22) then local v181=v78[2];local v182,v183=v69(v76[v181](v13(v76,v181 + 1 ,v78[3])));v71=(v183 + v181) -1 ;local v184=0;for v234=v181,v71 do local v235=0;while true do if (v235==0) then v184=v184 + 1 ;v76[v234]=v182[v184];break;end end end else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79>24) then local v187=v78[2];v76[v187](v76[v187 + 1 ]);else for v236=v78[2],v78[3] do v76[v236]=nil;end end elseif (v79<=38) then if (v79<=31) then if (v79<=28) then if (v79<=26) then local v126=v78[2];local v127=v78[4];local v128=v126 + 2 ;local v129={v76[v126](v76[v126 + 1 ],v76[v128])};for v143=1,v127 do v76[v128 + v143 ]=v129[v143];end local v130=v129[1];if v130 then v76[v128]=v130;v70=v78[3];else v70=v70 + 1 ;end elseif (v79==27) then local v190=v78[2];local v191=v76[v190];for v238=v190 + 1 ,v78[3] do v7(v191,v76[v238]);end else v70=v78[3];end elseif (v79<=29) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==30) then v76[v78[2]]=v29(v67[v78[3]],nil,v60);elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=34) then if (v79<=32) then local v131=v78[2];local v132,v133=v69(v76[v131](v13(v76,v131 + 1 ,v78[3])));v71=(v133 + v131) -1 ;local v134=0;for v146=v131,v71 do v134=v134 + 1 ;v76[v146]=v132[v134];end elseif (v79==33) then v76[v78[2]][v78[3]]=v78[4];else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=36) then if (v79==35) then v76[v78[2]]=v60[v78[3]];else local v201=0;local v202;while true do if (v201==0) then v202=v78[2];v76[v202]=v76[v202]();break;end end end elseif (v79==37) then v76[v78[2]]=v76[v78[3]];else local v205=v78[2];v76[v205](v13(v76,v205 + 1 ,v78[3]));end elseif (v79<=45) then if (v79<=41) then if (v79<=39) then local v135=0;local v136;local v137;local v138;while true do if (v135==1) then v138=v78[3];for v250=1,v138 do v137[v250]=v76[v136 + v250 ];end break;end if (v135==0) then v136=v78[2];v137=v76[v136];v135=1;end end elseif (v79==40) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79<=43) then if (v79>42) then v76[v78[2]][v78[3]]=v78[4];else local v210=0;local v211;while true do if (v210==0) then v211=v78[2];v76[v211](v76[v211 + 1 ]);break;end end end elseif (v79==44) then v70=v78[3];elseif v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=48) then if (v79<=46) then v76[v78[2]]=v76[v78[3]];elseif (v79==47) then local v213=v78[2];local v214=v76[v213];local v215=v78[3];for v242=1,v215 do v214[v242]=v76[v213 + v242 ];end elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=50) then if (v79>49) then v76[v78[2]]=v78[3];else v76[v78[2]]=v78[3];end elseif (v79>51) then local v220=0;local v221;while true do if (v220==0) then v221=v78[2];v76[v221]=v76[v221](v13(v76,v221 + 1 ,v78[3]));break;end end else local v222=v78[2];v76[v222]=v76[v222](v13(v76,v222 + 1 ,v71));end v70=v70 + 1 ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
