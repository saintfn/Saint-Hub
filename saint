--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=v2(v0(v30,16));if v19 then local v89=0;local v90;while true do if (v89==1) then return v90;end if (v89==0) then v90=v5(v81,v19);v19=nil;v89=1;end end else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=0 -(877 -(282 + 595)) ;local v83;while true do if (v82==(0 -0)) then v83=(v31/((3 -1)^(v32-1)))%((4 -2)^(((v33-((2257 -(1523 + 114)) -(555 + 64))) -(v32-1)) + 1)) ;return v83-(v83%(932 -(857 + 74))) ;end end else local v84=(570 -(367 + 201))^(v32-(928 -(214 + 641 + 72))) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (2 -0) );v18=v18 + (1067 -(68 + 997)) ;return (v36 * 256) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1273 -(226 + (2001 -(892 + 65)))) );v18=v18 + (17 -13) ;return (v40 * (16777333 -(32 + 85))) + (v39 * (64226 + 1310)) + (v38 * (57 + 199)) + v37 ;end local function v24() local v41=0 -0 ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(4 -(3 -2))) then if (v46==(0 + 0)) then if (v45==0) then return v47 * (0 -0) ;else v46=(886 -(261 + 624)) -0 ;v44=350 -(87 + 263) ;end elseif (v46==2047) then return ((v45==(180 -(67 + (535 -422)))) and (v47 * ((3 -2)/(442 -(416 + 26))))) or (v47 * NaN) ;end return v8(v47,v46-(296 + 455 + 272) ) * (v44 + (v45/(2^(23 + 29)))) ;end if (v41==(0 -0)) then v42=v23();v43=v23();v41=1 + (0 -0) ;end if (v41==((24 -17) -5)) then v46=v20(v43,1507 -(998 + 488) ,983 -(802 + 150) );v47=((v20(v43,85 -53 )==(773 -(201 + 571))) and  -(1 -(1747 -(760 + 987)))) or (1 + (1080 -(1020 + 60))) ;v41=1000 -(915 + 82) ;end if (v41==(2 -1)) then v44=1 + 0 ;v45=(v20(v43,1 -0 ,(2630 -(630 + 793)) -(1069 + 118) ) * ((4 -2)^(69 -37))) + v42 ;v41=1 + (1914 -(1789 + 124)) ;end end end local function v25(v48) local v49;if  not v48 then local v85=766 -(745 + 21) ;while true do if (v85==0) then v48=v23();if (v48==(0 + 0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -((1 + 1) -1) );v18=v18 + v48 ;local v50={};for v64=3 -2 , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=202 -(14 + 188) ;local v52;local v53;local v54;local v55;local v56;local v57;while true do if (v51~=(677 -(534 + 141))) then else for v91=812 -(569 + 242) ,v23() do local v92=0 + 0 ;local v93;local v94;while true do if (v92==0) then local v108=0 + 0 ;while true do if (v108~=1) then else v92=1 + 0 ;break;end if (v108==0) then v93=0 -0 ;v94=nil;v108=1;end end end if (v92==(1 -0)) then while true do if (v93==(1251 -(721 + 530))) then v94=v21();if (v20(v94,2 -1 ,1)~=(1271 -(945 + 326))) then else local v112=0 + 0 ;local v113;local v114;local v115;while true do if (v112==(4 -2)) then if (v20(v114,1,1 + 0 )~=(1 + 0)) then else v115[2]=v57[v115[398 -(115 + 281) ]];end if (v20(v114,2,2)==(2 -1)) then v115[3]=v57[v115[3 + 0 ]];end v112=703 -(271 + 429) ;end if (v112~=(0 -0)) then else local v116=0 + 0 ;local v117;while true do if (v116~=0) then else v117=0;while true do if (v117~=(1500 -(1408 + 92))) then else v113=v20(v94,1088 -(461 + 625) ,1291 -(993 + 295) );v114=v20(v94,14 -10 ,1177 -(418 + 753) );v117=1;end if ((868 -(550 + 317))==v117) then v112=1 -0 ;break;end end break;end end end if (v112~=(3 -0)) then else if (v20(v114,1 + 2 ,8 -5 )==(286 -(134 + 151))) then v115[2 + 2 ]=v57[v115[2 + 2 ]];end v52[v91]=v115;break;end if (v112~=(530 -(406 + 123))) then else local v119=1665 -(970 + 695) ;while true do if (v119~=(1 + 0)) then else v112=3 -1 ;break;end if (v119==(1990 -(582 + 1408))) then v115={v22(),v22(),nil,nil};if (v113==0) then local v247=0 -0 ;local v248;while true do if (v247~=(1824 -(1195 + 629))) then else v248=0 -0 ;while true do if (v248==(241 -(187 + 54))) then v115[783 -(162 + 618) ]=v22();v115[3 + 1 ]=v22();break;end end break;end end elseif (v113==1) then v115[3]=v23();elseif (v113==(2 + 0)) then v115[1 + 2 ]=v23() -((3 -1)^(26 -10)) ;elseif (v113==(1 + 2)) then local v294=1636 -(1373 + 263) ;local v295;while true do if (v294~=(1000 -(451 + 549))) then else v295=584 -(57 + 527) ;while true do if (v295==0) then v115[1 + 2 ]=v23() -(2^(24 -8)) ;v115[6 -2 ]=v22();break;end end break;end end end v119=1;end end end end end break;end end break;end end end for v95=1,v23() do v53[v95-1 ]=v28();end return v55;end if ((1385 -(746 + 638))==v51) then v56=v23();v57={};for v97=1,v56 do local v98=0;local v99;local v100;local v101;while true do if (v98==(0 + 0)) then v99=0 -0 ;v100=nil;v98=1 + 0 ;end if ((1 -0)==v98) then v101=nil;while true do if (0==v99) then local v109=341 -(218 + 123) ;local v110;while true do if (v109~=(1581 -(1535 + 46))) then else v110=0;while true do if (v110~=(1 -0)) then else v99=1 + 0 ;break;end if (v110==(0 + 0)) then v100=v21();v101=nil;v110=561 -(306 + 254) ;end end break;end end end if (v99==(1 + 0)) then if (v100==(1 -0)) then v101=v21()~=(1467 -(899 + 568)) ;elseif (v100==(2 + 0)) then v101=v24();elseif (v100~=(7 -4)) then else v101=v25();end v57[v97]=v101;break;end end break;end end end v55[606 -(268 + 335) ]=v21();v51=292 -(60 + 230) ;end if ((65 -(30 + 35))==v51) then v52={};v53={};v54={};v55={v52,v53,nil,v54};v51=1 + 0 ;end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v86=0,v74 do if (v86>=v68) then v72[v86-v68 ]=v73[v86 + 1 ];else v76[v86]=v73[v86 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do local v87=0;while true do if (v87==1) then if (v79<=25) then if (v79<=12) then if (v79<=5) then if (v79<=2) then if (v79<=0) then local v120=v78[2];local v121=v76[v120];local v122=v78[3];for v134=1,v122 do v121[v134]=v76[v120 + v134 ];end elseif (v79>1) then v76[v78[2]]=v78[3];elseif v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=3) then local v123=v78[2];v76[v123](v13(v76,v123 + 1 ,v78[3]));elseif (v79==4) then local v149=0;local v150;while true do if (v149==0) then v150=v78[2];v76[v150](v76[v150 + 1 ]);break;end end else local v151=v78[2];local v152=v78[4];local v153=v151 + 2 ;local v154={v76[v151](v76[v151 + 1 ],v76[v153])};for v226=1,v152 do v76[v153 + v226 ]=v154[v226];end local v155=v154[1];if v155 then local v240=0;while true do if (v240==0) then v76[v153]=v155;v70=v78[3];break;end end else v70=v70 + 1 ;end end elseif (v79<=8) then if (v79<=6) then v70=v78[3];elseif (v79>7) then local v156=0;local v157;local v158;while true do if (0==v156) then v157=v78[2];v158=v76[v78[3]];v156=1;end if (v156==1) then v76[v157 + 1 ]=v158;v76[v157]=v158[v78[4]];break;end end else local v159=0;local v160;local v161;local v162;local v163;while true do if (1==v159) then v71=(v162 + v160) -1 ;v163=0;v159=2;end if (v159==2) then for v271=v160,v71 do local v272=0;while true do if (v272==0) then v163=v163 + 1 ;v76[v271]=v161[v163];break;end end end break;end if (v159==0) then v160=v78[2];v161,v162=v69(v76[v160](v13(v76,v160 + 1 ,v78[3])));v159=1;end end end elseif (v79<=10) then if (v79>9) then v76[v78[2]]=v76[v78[3]][v78[4]];else v76[v78[2]]=v29(v67[v78[3]],nil,v60);end elseif (v79>11) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79<=18) then if (v79<=15) then if (v79<=13) then v76[v78[2]][v78[3]]=v76[v78[4]];elseif (v79>14) then v70=v78[3];else v76[v78[2]]=v76[v78[3]];end elseif (v79<=16) then v76[v78[2]]=v29(v67[v78[3]],nil,v60);elseif (v79>17) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v78[3]~=0 ;end elseif (v79<=21) then if (v79<=19) then for v137=v78[2],v78[3] do v76[v137]=nil;end elseif (v79>20) then v76[v78[2]]=v76[v78[3]][v78[4]];else v76[v78[2]][v78[3]]=v78[4];end elseif (v79<=23) then if (v79>22) then v76[v78[2]]=v76[v78[3]];else local v179=0;local v180;local v181;local v182;while true do if (v179==0) then v180=v78[2];v181={v76[v180](v76[v180 + 1 ])};v179=1;end if (v179==1) then v182=0;for v273=v180,v78[4] do local v274=0;while true do if (v274==0) then v182=v182 + 1 ;v76[v273]=v181[v182];break;end end end break;end end end elseif (v79==24) then local v183=0;local v184;while true do if (v183==0) then v184=v78[2];v76[v184]=v76[v184](v13(v76,v184 + 1 ,v71));break;end end else do return;end end elseif (v79<=38) then if (v79<=31) then if (v79<=28) then if (v79<=26) then local v128=0;local v129;while true do if (v128==0) then v129=v78[2];v76[v129]=v76[v129]();break;end end elseif (v79==27) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v185=0;local v186;local v187;while true do if (v185==1) then v76[v186 + 1 ]=v187;v76[v186]=v187[v78[4]];break;end if (v185==0) then v186=v78[2];v187=v76[v78[3]];v185=1;end end end elseif (v79<=29) then local v130=0;local v131;while true do if (v130==0) then v131=v78[2];v76[v131]=v76[v131](v13(v76,v131 + 1 ,v71));break;end end elseif (v79>30) then local v188=0;local v189;while true do if (v188==0) then v189=v78[2];v76[v189](v13(v76,v189 + 1 ,v78[3]));break;end end else local v190=v78[2];v76[v190]=v76[v190](v13(v76,v190 + 1 ,v78[3]));end elseif (v79<=34) then if (v79<=32) then for v139=v78[2],v78[3] do v76[v139]=nil;end elseif (v79>33) then local v192=0;local v193;local v194;local v195;while true do if (v192==0) then v193=v78[2];v194=v76[v193];v192=1;end if (v192==1) then v195=v78[3];for v275=1,v195 do v194[v275]=v76[v193 + v275 ];end break;end end else local v196=v78[2];local v197=v78[4];local v198=v196 + 2 ;local v199={v76[v196](v76[v196 + 1 ],v76[v198])};for v233=1,v197 do v76[v198 + v233 ]=v199[v233];end local v200=v199[1];if v200 then v76[v198]=v200;v70=v78[3];else v70=v70 + 1 ;end end elseif (v79<=36) then if (v79==35) then v76[v78[2]]=v78[3];else v76[v78[2]]=v60[v78[3]];end elseif (v79>37) then v76[v78[2]]=v60[v78[3]];else v76[v78[2]][v78[3]]=v78[4];end elseif (v79<=45) then if (v79<=41) then if (v79<=39) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>40) then v76[v78[2]]={};else local v211=0;local v212;local v213;local v214;local v215;while true do if (v211==0) then v212=v78[2];v213,v214=v69(v76[v212](v13(v76,v212 + 1 ,v78[3])));v211=1;end if (v211==2) then for v278=v212,v71 do local v279=0;while true do if (0==v279) then v215=v215 + 1 ;v76[v278]=v213[v215];break;end end end break;end if (v211==1) then v71=(v214 + v212) -1 ;v215=0;v211=2;end end end elseif (v79<=43) then if (v79==42) then local v216=v78[2];local v217={v76[v216](v76[v216 + 1 ])};local v218=0;for v236=v216,v78[4] do local v237=0;while true do if (v237==0) then v218=v218 + 1 ;v76[v236]=v217[v218];break;end end end else v76[v78[2]]();end elseif (v79>44) then local v219=v78[2];local v220=v76[v219];for v238=v219 + 1 ,v78[3] do v7(v220,v76[v238]);end else local v221=0;local v222;while true do if (v221==0) then v222=v78[2];v76[v222]=v76[v222](v13(v76,v222 + 1 ,v78[3]));break;end end end elseif (v79<=48) then if (v79<=46) then local v132=v78[2];v76[v132]=v76[v132]();elseif (v79==47) then v76[v78[2]]={};else local v224=v78[2];v76[v224](v76[v224 + 1 ]);end elseif (v79<=50) then if (v79==49) then v76[v78[2]]();else do return;end end elseif (v79==51) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v78[3]~=0 ;end v70=v70 + 1 ;break;end if (v87==0) then v78=v66[v70];v79=v78[1];v87=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
