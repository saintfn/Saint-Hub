--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v97=v5(v83,v19);v19=nil;return v97;else return v83;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v84=0;local v85;while true do if (v84==(0 -0)) then v85=(v31/((2 + 0)^(v32-(2 -1))))%(2^(((v33-(1 -0)) -(v32-(2 -(1 -0)))) + (620 -(555 + 64)))) ;return v85-(v85%(932 -(857 + 74))) ;end end else local v86=568 -(367 + 201) ;local v87;while true do if (v86==(927 -(214 + 713))) then v87=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v87 + v87))>=v87) and ((1943 -(68 + 997)) -(282 + 595))) or (1637 -(1523 + (1384 -(226 + 1044)))) ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==(117 -(32 + 85))) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=1 + 0 ;end if (((2285 -1327) -(892 + 65))==v34) then return v35;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (3 -1) ;return (v37 * (469 -213)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (353 -(87 + 263)) );v18=v18 + (184 -(67 + (449 -336))) ;return (v41 * (12302277 + 4474939)) + (v40 * (160901 -95365)) + (v39 * ((1141 -(802 + 150)) + 67)) + v38 ;end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (2==v42) then v47=v20(v44,18 + 3 ,31);v48=((v20(v44,804 -(158 + 43 + 571) )==1) and  -(1 -0)) or (1 + 0) ;v42=12 -(1922 -(1789 + 124)) ;end if ((1000 -(915 + 82))==v42) then if (v47==((1055 -(87 + 968)) -0)) then if (v46==(0 + (766 -(745 + 21)))) then return v48 * (0 -(0 -0)) ;else local v98=(409 + 778) -(1069 + 118) ;while true do if (v98==((0 + 0) -0)) then v47=1 -0 ;v45=0 + 0 ;break;end end end elseif (v47==(3636 -(3591 -2002))) then return ((v46==((1413 -(447 + 966)) + 0)) and (v48 * ((1 -0)/(791 -((1012 -644) + 423))))) or (v48 * NaN) ;end return v8(v48,v47-(3214 -(5998 -3807)) ) * (v45 + (v46/((20 -(10 + 8))^((2016 -(1703 + 114)) -147)))) ;end if (v42==(1424 -(630 + 793))) then v45=443 -(416 + 26) ;v46=(v20(v44,(11 -8) -2 ,20) * ((1 + 1)^(56 -24))) + v43 ;v42=440 -(145 + 293) ;end if (v42==(430 -(44 + 4 + 382))) then v43=v23();v44=v23();v42=1487 -(998 + 488) ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(701 -(376 + 325))) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1 -0) );v18=v18 + v49 ;local v51={};for v65=2 -1 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=380 -(339 + 41) ;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v67=0;while true do if (v67==0) then if (2~=v52) then else for v99=1 + 0 ,v23() do local v100=0 + 0 ;local v101;while true do if (0==v100) then v101=v21();if (v20(v101,397 -(115 + 281) ,1)~=(0 -0)) then else local v110=0;local v111;local v112;local v113;while true do if (v110==(1 + 0)) then local v217=0 -0 ;while true do if ((3 -2)==v217) then v110=2;break;end if (v217==(867 -(550 + 317))) then v113={v22(),v22(),nil,nil};if (v111==(285 -(134 + 151))) then local v272=1665 -(970 + 695) ;local v273;while true do if (v272==0) then v273=0;while true do if (v273~=(0 -0)) then else v113[3]=v22();v113[4]=v22();break;end end break;end end elseif (v111==(1991 -(582 + 1408))) then v113[10 -7 ]=v23();elseif (v111==2) then v113[3 -0 ]=v23() -(2^16) ;elseif (v111~=3) then else local v278=0;while true do if (v278~=(0 -0)) then else v113[1827 -(1195 + 629) ]=v23() -((2 -0)^(257 -(187 + 54))) ;v113[784 -(162 + 618) ]=v22();break;end end end v217=1;end end end if (v110~=3) then else if (v20(v112,3 + 0 ,3)==(1 + 0)) then v113[8 -4 ]=v58[v113[4]];end v53[v99]=v113;break;end if (v110~=(0 -0)) then else v111=v20(v101,1 + 1 ,3);v112=v20(v101,1640 -(1373 + 263) ,6);v110=1;end if (v110~=(1002 -(451 + 549))) then else if (v20(v112,1 + 0 ,1)~=1) then else v113[2]=v58[v113[2]];end if (v20(v112,2 -0 ,2 -0 )~=(1385 -(746 + 638))) then else v113[2 + 1 ]=v58[v113[3]];end v110=3;end end end break;end end end for v102=1 -0 ,v23() do v54[v102-(342 -(218 + 123)) ]=v28();end return v56;end if (v52==0) then local v95=0;while true do if (0~=v95) then else v53={};v54={};v95=1;end if (v95~=2) then else v52=1582 -(1535 + 46) ;break;end if (v95==(1 + 0)) then v55={};v56={v53,v54,nil,v55};v95=2;end end end v67=1 + 0 ;end if (v67==(1 -0)) then if (v52~=1) then else v57=v23();v58={};for v104=1468 -(899 + 568) ,v57 do local v105=0 + 0 ;local v106;local v107;local v108;while true do if (v105~=0) then else local v109=0 -0 ;while true do if (v109==(603 -(268 + 335))) then v106=290 -(60 + 230) ;v107=nil;v109=1;end if (v109==(573 -(426 + 146))) then v105=1;break;end end end if (v105==1) then v108=nil;while true do if (v106==1) then if (v107==(1 + 0)) then v108=v21()~=(1456 -(282 + 1174)) ;elseif (v107==(813 -(569 + 242))) then v108=v24();elseif (v107~=(8 -5)) then else v108=v25();end v58[v104]=v108;break;end if (v106==(0 + 0)) then local v136=0;local v137;while true do if (v136==0) then v137=1024 -(706 + 318) ;while true do if (v137==1) then v106=1;break;end if (v137==0) then v107=v21();v108=nil;v137=1252 -(721 + 530) ;end end break;end end end end break;end end end v56[3]=v21();v52=1273 -(945 + 326) ;end break;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v88=0,v76 do if (v88>=v70) then v74[v88-v70 ]=v75[v88 + 1 ];else v78[v88]=v75[v88 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=25) then if (v81<=12) then if (v81<=5) then if (v81<=2) then if (v81<=0) then local v114=v80[2];local v115={v78[v114](v78[v114 + 1 ])};local v116=0;for v138=v114,v80[4] do local v139=0;while true do if (v139==0) then v116=v116 + 1 ;v78[v138]=v115[v116];break;end end end elseif (v81>1) then v78[v80[2]]=v29(v69[v80[3]],nil,v61);else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=3) then local v117=0;local v118;while true do if (v117==0) then v118=v80[2];v78[v118](v78[v118 + 1 ]);break;end end elseif (v81==4) then for v220=v80[2],v80[3] do v78[v220]=nil;end else v78[v80[2]]=v61[v80[3]];end elseif (v81<=8) then if (v81<=6) then v78[v80[2]]=v80[3];elseif (v81==7) then v78[v80[2]][v80[3]]=v80[4];else v72=v80[3];end elseif (v81<=10) then if (v81>9) then v78[v80[2]]();else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81==11) then local v153=v80[2];local v154=v78[v153];local v155=v80[3];for v222=1,v155 do v154[v222]=v78[v153 + v222 ];end else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=18) then if (v81<=15) then if (v81<=13) then local v121=v80[2];v78[v121]=v78[v121](v13(v78,v121 + 1 ,v73));elseif (v81>14) then v78[v80[2]][v80[3]]=v80[4];elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=16) then v78[v80[2]]={};elseif (v81==17) then local v159=v80[2];local v160,v161=v71(v78[v159](v13(v78,v159 + 1 ,v80[3])));v73=(v161 + v159) -1 ;local v162=0;for v225=v159,v73 do local v226=0;while true do if (v226==0) then v162=v162 + 1 ;v78[v225]=v160[v162];break;end end end elseif v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=21) then if (v81<=19) then v78[v80[2]]=v78[v80[3]];elseif (v81>20) then local v163=0;local v164;local v165;local v166;local v167;while true do if (v163==0) then v164=v80[2];v165,v166=v71(v78[v164](v13(v78,v164 + 1 ,v80[3])));v163=1;end if (v163==1) then v73=(v166 + v164) -1 ;v167=0;v163=2;end if (v163==2) then for v266=v164,v73 do v167=v167 + 1 ;v78[v266]=v165[v167];end break;end end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=23) then if (v81>22) then local v170=v80[2];v78[v170]=v78[v170]();else local v172=0;local v173;while true do if (v172==0) then v173=v80[2];v78[v173]=v78[v173](v13(v78,v173 + 1 ,v80[3]));break;end end end elseif (v81==24) then do return;end else local v174=v80[2];local v175=v80[4];local v176=v174 + 2 ;local v177={v78[v174](v78[v174 + 1 ],v78[v176])};for v227=1,v175 do v78[v176 + v227 ]=v177[v227];end local v178=v177[1];if v178 then v78[v176]=v178;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81<=38) then if (v81<=31) then if (v81<=28) then if (v81<=26) then local v126=0;local v127;while true do if (v126==0) then v127=v80[2];v78[v127]=v78[v127](v13(v78,v127 + 1 ,v80[3]));break;end end elseif (v81==27) then do return;end else local v179=v80[2];v78[v179]=v78[v179]();end elseif (v81<=29) then local v128=v80[2];local v129={v78[v128](v78[v128 + 1 ])};local v130=0;for v140=v128,v80[4] do v130=v130 + 1 ;v78[v140]=v129[v130];end elseif (v81>30) then v78[v80[2]]=v78[v80[3]][v80[4]];else v78[v80[2]]=v61[v80[3]];end elseif (v81<=34) then if (v81<=32) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==33) then v78[v80[2]][v80[3]]=v78[v80[4]];else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=36) then if (v81==35) then local v189=0;local v190;local v191;local v192;while true do if (1==v189) then v192=v80[3];for v269=1,v192 do v191[v269]=v78[v190 + v269 ];end break;end if (v189==0) then v190=v80[2];v191=v78[v190];v189=1;end end else v78[v80[2]]=v80[3];end elseif (v81==37) then local v195=v80[2];v78[v195](v13(v78,v195 + 1 ,v80[3]));else v78[v80[2]]();end elseif (v81<=45) then if (v81<=41) then if (v81<=39) then local v131=0;local v132;while true do if (v131==0) then v132=v80[2];v78[v132]=v78[v132](v13(v78,v132 + 1 ,v73));break;end end elseif (v81>40) then local v196=v80[2];local v197=v78[v80[3]];v78[v196 + 1 ]=v197;v78[v196]=v197[v80[4]];elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=43) then if (v81>42) then local v201=v80[2];local v202=v80[4];local v203=v201 + 2 ;local v204={v78[v201](v78[v201 + 1 ],v78[v203])};for v234=1,v202 do v78[v203 + v234 ]=v204[v234];end local v205=v204[1];if v205 then v78[v203]=v205;v72=v80[3];else v72=v72 + 1 ;end else local v206=v80[2];local v207=v78[v206];for v237=v206 + 1 ,v80[3] do v7(v207,v78[v237]);end end elseif (v81==44) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else v72=v80[3];end elseif (v81<=48) then if (v81<=46) then local v133=0;local v134;while true do if (v133==0) then v134=v80[2];v78[v134](v78[v134 + 1 ]);break;end end elseif (v81>47) then v78[v80[2]]={};elseif v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=50) then if (v81>49) then for v239=v80[2],v80[3] do v78[v239]=nil;end else local v210=v80[2];v78[v210](v13(v78,v210 + 1 ,v80[3]));end elseif (v81==51) then local v211=v80[2];local v212=v78[v80[3]];v78[v211 + 1 ]=v212;v78[v211]=v212[v80[4]];else v78[v80[2]]=v29(v69[v80[3]],nil,v61);end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
