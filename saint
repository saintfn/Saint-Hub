--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v88=0;local v89;while true do if (v88==1) then return v89;end if (v88==0) then v89=v5(v81,v19);v19=nil;v88=1;end end else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(928 -(214 + (830 -(32 + 85)))))))%((5 -(3 + 0))^(((v33-(1 -(0 + 0))) -(v32-((959 -(892 + 65)) -1))) + ((3907 -2269) -(1523 + 114)))) ;return v82-(v82%(1 + 0)) ;else local v83=(2 -(0 -0))^(v32-(620 -(555 + 64))) ;return (((v31%(v83 + v83))>=v83) and (932 -(857 + 74))) or (0 -0) ;end end local function v21() local v34=(0 -0) -0 ;local v35;while true do if (v34==(350 -(87 + 263))) then v35=v1(v16,v18,v18);v18=v18 + (181 -(67 + 113)) ;v34=1 + 0 + 0 ;end if (v34==1) then return v35;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (7 -5) );v18=v18 + (954 -(802 + 150)) ;return (v37 * (689 -433)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (5 -2) );v18=v18 + 3 + 1 ;return (v41 * (16778213 -(915 + 82))) + (v40 * ((244051 -58481) -120034)) + (v39 * (150 + 106)) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=1188 -(1069 + 118) ;local v45=(v20(v43,1,(37 + 8) -25 ) * ((3 -1)^32)) + v42 ;local v46=v20(v43,4 + 17 ,54 -23 );local v47=((v20(v43,32 + 0 )==(792 -(368 + 423))) and  -(3 -2)) or ((791 -(201 + 571)) -(10 + 8)) ;if (v46==(0 -0)) then if (v45==((1580 -(116 + 1022)) -(416 + 26))) then return v47 * (0 -0) ;else v46=1 + 0 ;v44=0;end elseif (v46==(3621 -(6552 -4978))) then return ((v45==(438 -(145 + 293))) and (v47 * ((431 -(44 + 386))/(1486 -(998 + 287 + 201))))) or (v47 * NaN) ;end return v8(v47,v46-((1186 -861) + 698) ) * (v44 + (v45/((7 -5)^52))) ;end local function v25(v48) local v49;if  not v48 then local v84=(1525 -666) -(814 + 45) ;while true do if (v84==(0 -0)) then v48=v23();if (v48==((1080 -(1020 + 60)) + (1423 -(630 + 793)))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;local v50={};for v64=886 -(261 + 624) , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;while true do local v66=0;while true do if (v66==(1 -0)) then if ((1 -0)~=v51) then else v56=v23();v57={};for v96=1 + 0 ,v56 do local v97=438 -(262 + 176) ;local v98;local v99;while true do if (1==v97) then if (v98==(1722 -(345 + 1376))) then v99=v21()~=(688 -(198 + 490)) ;elseif (v98==2) then v99=v24();elseif (v98~=(13 -10)) then else v99=v25();end v57[v96]=v99;break;end if (v97==(0 -0)) then local v110=1206 -(696 + 510) ;while true do if (v110~=(1 -0)) then else v97=1 + 0 ;break;end if (v110~=(560 -(306 + 254))) then else v98=v21();v99=nil;v110=1;end end end end end v55[1265 -(1091 + 171) ]=v21();v51=2;end break;end if (v66==0) then if (v51~=(0 + 0)) then else local v95=0;while true do if (v95==(1 -0)) then v54={};v55={v52,v53,nil,v54};v95=376 -(123 + 251) ;end if (v95==(292 -(60 + 230))) then v51=1;break;end if (v95==0) then v52={};v53={};v95=1;end end end if (v51==2) then for v100=573 -(426 + 146) ,v23() do local v101=v21();if (v20(v101,4 -3 ,699 -(208 + 490) )~=0) then else local v104=0 + 0 ;local v105;local v106;local v107;local v108;while true do if (v104==2) then while true do if ((1 + 1)==v105) then local v210=836 -(660 + 176) ;while true do if (v210==(1 + 0)) then v105=814 -(569 + 242) ;break;end if (v210~=0) then else if (v20(v107,203 -(14 + 188) ,1)==(676 -(534 + 141))) then v108[1 + 1 ]=v57[v108[2 + 0 ]];end if (v20(v107,2 + 0 ,2)==(1 -0)) then v108[4 -1 ]=v57[v108[8 -5 ]];end v210=1 + 0 ;end end end if (v105==3) then if (v20(v107,703 -(271 + 429) ,2 + 1 )==(1 + 0)) then v108[400 -(115 + 281) ]=v57[v108[9 -5 ]];end v52[v100]=v108;break;end if (v105==(0 + 0)) then local v212=0 -0 ;while true do if (1==v212) then v105=3 -2 ;break;end if (v212~=(867 -(550 + 317))) then else v106=v20(v101,2,3);v107=v20(v101,4,1294 -(993 + 295) );v212=1 + 0 ;end end end if (v105==(1172 -(418 + 753))) then local v213=0 + 0 ;while true do if (v213==(0 -0)) then v108={v22(),v22(),nil,nil};if (v106==(285 -(134 + 151))) then local v266=1665 -(970 + 695) ;local v267;while true do if (v266==(0 -0)) then v267=1769 -(1749 + 20) ;while true do if (v267==(0 + 0)) then v108[3]=v22();v108[1994 -(582 + 1408) ]=v22();break;end end break;end end elseif (v106==1) then v108[10 -7 ]=v23();elseif (v106==(2 -0)) then v108[1148 -(466 + 679) ]=v23() -((7 -5)^16) ;elseif (v106~=3) then else local v274=1824 -(1195 + 629) ;while true do if (v274==0) then v108[3 -0 ]=v23() -(2^(257 -(187 + 54))) ;v108[784 -(162 + 618) ]=v22();break;end end end v213=1;end if (v213==(1 + 0)) then v105=2;break;end end end end break;end if (v104~=0) then else local v111=0 + 0 ;while true do if ((1 + 0)==v111) then v104=1;break;end if (0~=v111) then else v105=0;v106=nil;v111=1 -0 ;end end end if (v104==(1 -0)) then v107=nil;v108=nil;v104=1 + 1 ;end end end end for v102=1637 -(1373 + 263) ,v23() do v53[v102-(1001 -(451 + 549)) ]=v28();end return v55;end v66=1 + 0 ;end end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...) local v67=v61;local v68=v62;local v69=v63;local v70=v27;local v71=1;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v85=0,v75 do if (v85>=v69) then v73[v85-v69 ]=v74[v85 + 1 ];else v77[v85]=v74[v85 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;local v80;while true do v79=v67[v71];v80=v79[1];if (v80<=25) then if (v80<=12) then if (v80<=5) then if (v80<=2) then if (v80<=0) then v77[v79[2]]=v29(v68[v79[3]],nil,v60);elseif (v80>1) then local v134=0;local v135;while true do if (v134==0) then v135=v79[2];v77[v135]=v77[v135](v13(v77,v135 + 1 ,v79[3]));break;end end else local v136=v79[2];v77[v136](v13(v77,v136 + 1 ,v79[3]));end elseif (v80<=3) then v77[v79[2]][v79[3]]=v77[v79[4]];elseif (v80>4) then local v137=v79[2];v77[v137]=v77[v137](v13(v77,v137 + 1 ,v72));else do return;end end elseif (v80<=8) then if (v80<=6) then if (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80>7) then local v140=v79[2];local v141=v77[v140];local v142=v79[3];for v214=1,v142 do v141[v214]=v77[v140 + v214 ];end else v77[v79[2]]={};end elseif (v80<=10) then if (v80==9) then for v217=v79[2],v79[3] do v77[v217]=nil;end else local v144=0;local v145;while true do if (0==v144) then v145=v79[2];v77[v145]=v77[v145]();break;end end end elseif (v80==11) then local v146=v79[2];local v147={v77[v146](v77[v146 + 1 ])};local v148=0;for v219=v146,v79[4] do v148=v148 + 1 ;v77[v219]=v147[v148];end else local v149=v79[2];v77[v149]=v77[v149]();end elseif (v80<=18) then if (v80<=15) then if (v80<=13) then v71=v79[3];elseif (v80==14) then v77[v79[2]]=v77[v79[3]];else v77[v79[2]]();end elseif (v80<=16) then local v116=v79[2];local v117=v77[v116];for v130=v116 + 1 ,v79[3] do v7(v117,v77[v130]);end elseif (v80>17) then v77[v79[2]]=v79[3]~=0 ;else local v154=0;local v155;local v156;while true do if (v154==0) then v155=v79[2];v156=v77[v79[3]];v154=1;end if (v154==1) then v77[v155 + 1 ]=v156;v77[v155]=v156[v79[4]];break;end end end elseif (v80<=21) then if (v80<=19) then v77[v79[2]]();elseif (v80==20) then local v157=v79[2];v77[v157]=v77[v157](v13(v77,v157 + 1 ,v72));elseif v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=23) then if (v80>22) then local v159=v79[2];v77[v159](v77[v159 + 1 ]);elseif v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80>24) then local v160=0;local v161;local v162;local v163;local v164;while true do if (v160==1) then v72=(v163 + v161) -1 ;v164=0;v160=2;end if (0==v160) then v161=v79[2];v162,v163=v70(v77[v161](v13(v77,v161 + 1 ,v79[3])));v160=1;end if (v160==2) then for v255=v161,v72 do local v256=0;while true do if (v256==0) then v164=v164 + 1 ;v77[v255]=v162[v164];break;end end end break;end end else v77[v79[2]]=v77[v79[3]][v79[4]];end elseif (v80<=38) then if (v80<=31) then if (v80<=28) then if (v80<=26) then v77[v79[2]]=v60[v79[3]];elseif (v80==27) then local v167=v79[2];local v168=v77[v79[3]];v77[v167 + 1 ]=v168;v77[v167]=v168[v79[4]];else local v172=v79[2];v77[v172](v77[v172 + 1 ]);end elseif (v80<=29) then local v120=v79[2];local v121=v79[4];local v122=v120 + 2 ;local v123={v77[v120](v77[v120 + 1 ],v77[v122])};for v131=1,v121 do v77[v122 + v131 ]=v123[v131];end local v124=v123[1];if v124 then v77[v122]=v124;v71=v79[3];else v71=v71 + 1 ;end elseif (v80==30) then local v175=v79[2];local v176={v77[v175](v77[v175 + 1 ])};local v177=0;for v222=v175,v79[4] do v177=v177 + 1 ;v77[v222]=v176[v177];end else v77[v79[2]]=v77[v79[3]];end elseif (v80<=34) then if (v80<=32) then v77[v79[2]]={};elseif (v80>33) then v77[v79[2]]=v29(v68[v79[3]],nil,v60);elseif (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=36) then if (v80>35) then local v181=0;local v182;local v183;local v184;while true do if (v181==0) then v182=v79[2];v183=v77[v182];v181=1;end if (v181==1) then v184=v79[3];for v257=1,v184 do v183[v257]=v77[v182 + v257 ];end break;end end else v77[v79[2]]=v60[v79[3]];end elseif (v80>37) then do return;end elseif (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=45) then if (v80<=41) then if (v80<=39) then v77[v79[2]]=v77[v79[3]][v79[4]];elseif (v80>40) then for v225=v79[2],v79[3] do v77[v225]=nil;end else v77[v79[2]]=v79[3];end elseif (v80<=43) then if (v80==42) then v77[v79[2]]=v79[3]~=0 ;else local v190=v79[2];v77[v190]=v77[v190](v13(v77,v190 + 1 ,v79[3]));end elseif (v80>44) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end else local v192=v79[2];local v193,v194=v70(v77[v192](v13(v77,v192 + 1 ,v79[3])));v72=(v194 + v192) -1 ;local v195=0;for v227=v192,v72 do local v228=0;while true do if (v228==0) then v195=v195 + 1 ;v77[v227]=v193[v195];break;end end end end elseif (v80<=48) then if (v80<=46) then v77[v79[2]][v79[3]]=v79[4];elseif (v80==47) then v77[v79[2]][v79[3]]=v79[4];else local v198=0;local v199;while true do if (v198==0) then v199=v79[2];v77[v199](v13(v77,v199 + 1 ,v79[3]));break;end end end elseif (v80<=50) then if (v80==49) then local v200=v79[2];local v201=v79[4];local v202=v200 + 2 ;local v203={v77[v200](v77[v200 + 1 ],v77[v202])};for v229=1,v201 do v77[v202 + v229 ]=v203[v229];end local v204=v203[1];if v204 then v77[v202]=v204;v71=v79[3];else v71=v71 + 1 ;end else v71=v79[3];end elseif (v80>51) then v77[v79[2]][v79[3]]=v77[v79[4]];else v77[v79[2]]=v79[3];end v71=v71 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
