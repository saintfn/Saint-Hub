--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v97=0;local v98;while true do if (v97==1) then return v98;end if (v97==0) then v98=v5(v82,v19);v19=nil;v97=1;end end else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=0;local v84;while true do if (v83==(0 -(0 + 0))) then v84=(v31/(((1642 -(1523 + 114)) -3)^(v32-(1 -(0 -0)))))%((4 -(1067 -(68 + 997)))^(((v33-(620 -(555 + 64))) -(v32-(1271 -(226 + 1044)))) + (932 -(857 + 74)))) ;return v84-(v84%(569 -(367 + 201))) ;end end else local v85=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v85 + v85))>=v85) and (1 + 0)) or (877 -(282 + 595)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (8 -6) );v18=v18 + (119 -(32 + 85)) ;return (v36 * (251 + 5)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (961 -(892 + (415 -(87 + 263)))) ;return (v40 * ((40022743 -(67 + 113)) -23245347)) + (v39 * (121138 -55602)) + (v38 * (469 -213)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 + 0 ;local v44=(v20(v42,2 -1 ,(54 -39) + 5 ) * ((7 -5)^(984 -(802 + 150)))) + v41 ;local v45=v20(v42,56 -35 ,55 -24 );local v46=((v20(v42,24 + 8 )==(998 -(915 + 82))) and  -(3 -2)) or (3 -2) ;if (v45==(0 + (859 -(814 + 45)))) then if (v44==(0 -0)) then return v46 * (438 -(145 + 293)) ;else v45=(2 -1) + 0 ;v43=1486 -(998 + 488) ;end elseif (v45==(2691 -644)) then return ((v44==(1187 -(1069 + 118))) and (v46 * (((42 + 731) -(201 + 571))/(0 -(0 + 0))))) or (v46 * NaN) ;end return v8(v46,v45-(2237 -1214) ) * (v43 + (v44/((1 + 1)^(31 + 21)))) ;end local function v25(v47) local v48;if  not v47 then v47=v23();if (v47==(885 -(261 + 624))) then return "";end end v48=v3(v16,v18,(v18 + v47) -(1 -0) );v18=v18 + v47 ;local v49={};for v63=1, #v48 do v49[v63]=v2(v1(v3(v48,v63,v63)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=1749 -(1013 + 736) ;local v51;local v52;local v53;local v54;local v55;local v56;while true do local v65=0 + 0 ;while true do if ((0 -0)~=v65) then else if (v50~=(3 -2)) then else local v93=867 -(550 + 317) ;local v94;while true do if (v93~=(0 -0)) then else v94=0 -0 ;while true do if ((2 + 0)==v94) then v50=5 -3 ;break;end if (v94==0) then v55=v23();v56={};v94=286 -(134 + 151) ;end if (v94==(1666 -(970 + 695))) then for v128=1,v55 do local v129=1500 -(1408 + 92) ;local v130;local v131;while true do if (v129==(1086 -(461 + 625))) then local v233=1288 -(993 + 295) ;while true do if (v233~=(0 -0)) then else v130=v21();v131=nil;v233=1;end if ((1991 -(582 + 1408))==v233) then v129=1;break;end end end if (v129==1) then if (v130==(1 + 0)) then v131=v21()~=0 ;elseif (v130==2) then v131=v24();elseif (v130~=3) then else v131=v25();end v56[v128]=v131;break;end end end v54[10 -7 ]=v21();v94=2;end end break;end end end if (v50~=(0 -0)) then else local v95=0 -0 ;local v96;while true do if (v95==(1824 -(1195 + 629))) then v96=0 -0 ;while true do if (v96~=0) then else v51={};v52={};v96=1;end if (v96==2) then v50=242 -(187 + 54) ;break;end if (1==v96) then v53={};v54={v51,v52,nil,v53};v96=2 + 0 ;end end break;end end end v65=1;end if ((1 -0)==v65) then if (v50~=(2 -0)) then else for v99=1 + 0 ,v23() do local v100=1636 -(1373 + 263) ;local v101;while true do if (v100~=(1000 -(451 + 549))) then else v101=v21();if (v20(v101,1 + 0 ,1 + 0 )~=(0 + 0)) then else local v105=0 -0 ;local v106;local v107;local v108;while true do if (v105~=3) then else if (v20(v107,3,4 -1 )==(1 -0)) then v108[1388 -(746 + 638) ]=v56[v108[2 + 2 ]];end v51[v99]=v108;break;end if ((1 -0)~=v105) then else local v214=341 -(218 + 123) ;while true do if (v214==0) then local v262=1427 -(41 + 1386) ;while true do if (v262~=(1581 -(1535 + 46))) then else v108={v22(),v22(),nil,nil};if (v106==(166 -(122 + 44))) then local v276=0 -0 ;local v277;while true do if (v276==0) then v277=0 -0 ;while true do if (0~=v277) then else v108[1 + 2 ]=v22();v108[4]=v22();break;end end break;end end elseif (v106==(561 -(306 + 254))) then v108[3]=v23();elseif (v106==(1 + 1)) then v108[3]=v23() -((3 -1)^16) ;elseif (v106~=(1470 -(899 + 568))) then else local v282=0 -0 ;while true do if (v282~=0) then else v108[68 -(30 + 35) ]=v23() -((2 + 0)^(11 + 5)) ;v108[1261 -(1043 + 214) ]=v22();break;end end end v262=1;end if (v262==(2 -1)) then v214=604 -(268 + 335) ;break;end end end if (v214~=(291 -(60 + 230))) then else v105=2;break;end end end if (v105==(572 -(426 + 146))) then v106=v20(v101,2,3);v107=v20(v101,1 + 3 ,1462 -(282 + 1174) );v105=812 -(569 + 242) ;end if (v105==(322 -(53 + 267))) then if (v20(v107,1 + 0 ,2 -1 )~=(983 -(18 + 964))) then else v108[7 -5 ]=v56[v108[1 + 1 ]];end if (v20(v107,2 + 0 ,2)==1) then v108[3]=v56[v108[1027 -(706 + 318) ]];end v105=1254 -(721 + 530) ;end end end break;end end end for v102=851 -(20 + 830) ,v23() do v52[v102-(1272 -(945 + 326)) ]=v28();end return v54;end break;end end end end local function v29(v57,v58,v59) local v60=v57[1];local v61=v57[2];local v62=v57[3];return function(...) local v66=v60;local v67=v61;local v68=v62;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v86=0,v74 do if (v86>=v68) then v72[v86-v68 ]=v73[v86 + 1 ];else v76[v86]=v73[v86 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1];if (v79<=25) then if (v79<=12) then if (v79<=5) then if (v79<=2) then if (v79<=0) then local v109=0;local v110;local v111;while true do if (v109==1) then v76[v110 + 1 ]=v111;v76[v110]=v111[v78[4]];break;end if (v109==0) then v110=v78[2];v111=v76[v78[3]];v109=1;end end elseif (v79==1) then v76[v78[2]]=v76[v78[3]];else local v139=0;local v140;while true do if (v139==0) then v140=v78[2];v76[v140](v76[v140 + 1 ]);break;end end end elseif (v79<=3) then for v132=v78[2],v78[3] do v76[v132]=nil;end elseif (v79>4) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]={};end elseif (v79<=8) then if (v79<=6) then v76[v78[2]][v78[3]]=v76[v78[4]];elseif (v79>7) then v76[v78[2]][v78[3]]=v76[v78[4]];else v76[v78[2]]=v29(v67[v78[3]],nil,v59);end elseif (v79<=10) then if (v79>9) then v76[v78[2]]=v78[3]~=0 ;else local v146=0;local v147;local v148;local v149;while true do if (v146==1) then v149=v78[3];for v263=1,v149 do v148[v263]=v76[v147 + v263 ];end break;end if (v146==0) then v147=v78[2];v148=v76[v147];v146=1;end end end elseif (v79>11) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v150=v78[2];local v151=v76[v150];for v220=v150 + 1 ,v78[3] do v7(v151,v76[v220]);end end elseif (v79<=18) then if (v79<=15) then if (v79<=13) then local v114=v78[2];v76[v114]=v76[v114](v13(v76,v114 + 1 ,v71));elseif (v79>14) then v76[v78[2]]=v78[3]~=0 ;else local v153=v78[2];v76[v153](v13(v76,v153 + 1 ,v78[3]));end elseif (v79<=16) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==17) then local v155=0;local v156;local v157;local v158;while true do if (v155==1) then v158=v78[3];for v266=1,v158 do v157[v266]=v76[v156 + v266 ];end break;end if (0==v155) then v156=v78[2];v157=v76[v156];v155=1;end end elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=21) then if (v79<=19) then do return;end elseif (v79==20) then local v159=v78[2];local v160,v161=v69(v76[v159](v13(v76,v159 + 1 ,v78[3])));v71=(v161 + v159) -1 ;local v162=0;for v221=v159,v71 do v162=v162 + 1 ;v76[v221]=v160[v162];end else local v163=0;local v164;local v165;local v166;while true do if (v163==0) then v164=v78[2];v165={v76[v164](v76[v164 + 1 ])};v163=1;end if (v163==1) then v166=0;for v269=v164,v78[4] do v166=v166 + 1 ;v76[v269]=v165[v166];end break;end end end elseif (v79<=23) then if (v79>22) then v76[v78[2]]=v76[v78[3]][v78[4]];else local v169=v78[2];local v170=v78[4];local v171=v169 + 2 ;local v172={v76[v169](v76[v169 + 1 ],v76[v171])};for v224=1,v170 do v76[v171 + v224 ]=v172[v224];end local v173=v172[1];if v173 then local v238=0;while true do if (v238==0) then v76[v171]=v173;v70=v78[3];break;end end else v70=v70 + 1 ;end end elseif (v79==24) then v76[v78[2]][v78[3]]=v78[4];else local v176=v78[2];v76[v176]=v76[v176]();end elseif (v79<=38) then if (v79<=31) then if (v79<=28) then if (v79<=26) then v76[v78[2]]=v59[v78[3]];elseif (v79==27) then v76[v78[2]]=v78[3];else local v180=0;local v181;while true do if (v180==0) then v181=v78[2];v76[v181](v13(v76,v181 + 1 ,v78[3]));break;end end end elseif (v79<=29) then local v118=v78[2];v76[v118]=v76[v118](v13(v76,v118 + 1 ,v71));elseif (v79>30) then local v182=v78[2];local v183=v76[v78[3]];v76[v182 + 1 ]=v183;v76[v182]=v183[v78[4]];else v76[v78[2]]=v78[3];end elseif (v79<=34) then if (v79<=32) then local v120=0;local v121;local v122;local v123;while true do if (v120==1) then v123=0;for v239=v121,v78[4] do v123=v123 + 1 ;v76[v239]=v122[v123];end break;end if (v120==0) then v121=v78[2];v122={v76[v121](v76[v121 + 1 ])};v120=1;end end elseif (v79>33) then local v189=v78[2];local v190=v78[4];local v191=v189 + 2 ;local v192={v76[v189](v76[v189 + 1 ],v76[v191])};for v228=1,v190 do v76[v191 + v228 ]=v192[v228];end local v193=v192[1];if v193 then local v242=0;while true do if (v242==0) then v76[v191]=v193;v70=v78[3];break;end end else v70=v70 + 1 ;end else v76[v78[2]]=v59[v78[3]];end elseif (v79<=36) then if (v79>35) then v70=v78[3];else local v197=v78[2];v76[v197](v76[v197 + 1 ]);end elseif (v79==37) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v198=0;local v199;while true do if (v198==0) then v199=v78[2];v76[v199]=v76[v199]();break;end end end elseif (v79<=45) then if (v79<=41) then if (v79<=39) then local v124=v78[2];local v125,v126=v69(v76[v124](v13(v76,v124 + 1 ,v78[3])));v71=(v126 + v124) -1 ;local v127=0;for v134=v124,v71 do v127=v127 + 1 ;v76[v134]=v125[v127];end elseif (v79==40) then v76[v78[2]]={};else v76[v78[2]]=v76[v78[3]];end elseif (v79<=43) then if (v79==42) then v70=v78[3];else v76[v78[2]]();end elseif (v79>44) then do return;end else v76[v78[2]][v78[3]]=v78[4];end elseif (v79<=48) then if (v79<=46) then v76[v78[2]]();elseif (v79>47) then v76[v78[2]]=v76[v78[3]][v78[4]];else for v231=v78[2],v78[3] do v76[v231]=nil;end end elseif (v79<=50) then if (v79==49) then local v208=v78[2];v76[v208]=v76[v208](v13(v76,v208 + 1 ,v78[3]));else v76[v78[2]]=v29(v67[v78[3]],nil,v59);end elseif (v79==51) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else local v211=v78[2];v76[v211]=v76[v211](v13(v76,v211 + 1 ,v78[3]));end v70=v70 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
